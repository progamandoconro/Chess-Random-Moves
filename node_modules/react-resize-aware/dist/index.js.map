{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["//\n// react-resize-aware component\n//\n// Triggers a `resize` event everytime the component changes its sizes\n// MIT License\n// Copyright 2016, Federico Zivolo\n//\n\nimport {\n  createElement,\n  Component,\n  Children,\n  cloneElement,\n  isValidElement,\n} from 'react';\n\nconst style = {\n  display: 'block',\n  opacity: 0,\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  height: '100%',\n  width: '100%',\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  zIndex: -1,\n};\n\nexport default class ResizeAware extends Component {\n  static defaultProps = {\n    component: 'div',\n    // don't define here the defaults to avoid to break\n    // the render result of previous versions\n    // TODO: use defaultProps to define default values\n    widthPropName: undefined,\n    heightPropName: undefined,\n  };\n  state = {};\n\n  // Init the resizeElement\n  componentDidMount() {\n    this.resizeElement.data = 'about:blank';\n  }\n\n  // Called when the object is loaded\n  handleObjectLoad = evt => {\n    this.setState(\n      {\n        resizeTarget: evt.target.contentDocument.defaultView,\n      },\n      () => {\n        this.state.resizeTarget.addEventListener('resize', this.handleResize);\n        this.handleResize();\n      }\n    );\n  };\n\n  componentWillUnmount() {\n    const { resizeTarget } = this.state;\n\n    // ensure the resizeTarget exists and is in fact an event listener\n    // this fixes an issue where contentDocument.defaultView is not a real window object\n    // as can be the case when used with react portals\n    const isListener =\n      resizeTarget && typeof resizeTarget.removeEventListener === 'function';\n\n    isListener && resizeTarget.removeEventListener('resize', this.handleResize);\n  }\n\n  // Function called on component resize\n  handleResize = () => {\n    const sizes = {\n      width: this.container.offsetWidth,\n      height: this.container.offsetHeight,\n    };\n    this.setState(sizes);\n    this.props.onResize && this.props.onResize(sizes);\n  };\n\n  render() {\n    const {\n      children,\n      onResize,\n      onlyEvent,\n      component,\n      widthPropName,\n      heightPropName,\n      ...props\n    } = this.props;\n    const { width, height } = this.state;\n\n    const hasCustomComponent = typeof component !== 'string';\n\n    const widthProp = [widthPropName || 'width'];\n    const heightProp = [heightPropName || 'height'];\n\n    const sizes = {\n      [widthProp]: width,\n      [heightProp]: height,\n    };\n\n    return createElement(\n      component,\n      {\n        [hasCustomComponent ? 'getRef' : 'ref']: el => (this.container = el),\n        ...(hasCustomComponent && sizes),\n        ...props,\n      },\n      createElement('object', {\n        type: 'text/html',\n        style,\n        ref: el => (this.resizeElement = el),\n        onLoad: this.handleObjectLoad,\n        'aria-hidden': true,\n        tabIndex: -1,\n      }),\n      typeof children === 'function'\n        ? children({ width, height })\n        : Children.map(children, child =>\n            isValidElement(child)\n              ? cloneElement(child, !onlyEvent ? sizes : null)\n              : child\n          )\n    );\n  }\n}\n\nexport function makeResizeAware(component) {\n  return props => createElement(ResizeAware, { component, ...props });\n}\n"],"names":["style","ResizeAware","state","handleObjectLoad","setState","evt","target","contentDocument","defaultView","resizeTarget","addEventListener","handleResize","sizes","container","offsetWidth","offsetHeight","props","onResize","resizeElement","data","isListener","removeEventListener","children","onlyEvent","component","widthPropName","heightPropName","width","height","hasCustomComponent","widthProp","heightProp","createElement","el","Children","map","isValidElement","child","cloneElement","Component","defaultProps","undefined","makeResizeAware"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,AAQA,IAAMA,QAAQ;WACH,OADG;WAEH,CAFG;YAGF,UAHE;OAIP,CAJO;QAKN,CALM;UAMJ,MANI;SAOL,MAPK;YAQF,QARE;iBASG,MATH;UAUJ,CAAC;CAVX;;IAaqBC;;;;;;;;;;;;;;gMASnBC,QAAQ,UAQRC,mBAAmB,eAAO;YACnBC,QAAL,CACE;sBACgBC,IAAIC,MAAJ,CAAWC,eAAX,CAA2BC;OAF7C,EAIE,YAAM;cACCN,KAAL,CAAWO,YAAX,CAAwBC,gBAAxB,CAAyC,QAAzC,EAAmD,MAAKC,YAAxD;cACKA,YAAL;OANJ;aAwBFA,eAAe,YAAM;UACbC,QAAQ;eACL,MAAKC,SAAL,CAAeC,WADV;gBAEJ,MAAKD,SAAL,CAAeE;OAFzB;YAIKX,QAAL,CAAcQ,KAAd;YACKI,KAAL,CAAWC,QAAX,IAAuB,MAAKD,KAAL,CAAWC,QAAX,CAAoBL,KAApB,CAAvB;;;;;;;;;wCApCkB;WACbM,aAAL,CAAmBC,IAAnB,GAA0B,aAA1B;;;;;;;2CAgBqB;UACbV,YADa,GACI,KAAKP,KADT,CACbO,YADa;;;;;;UAMfW,aACJX,gBAAgB,OAAOA,aAAaY,mBAApB,KAA4C,UAD9D;;oBAGcZ,aAAaY,mBAAb,CAAiC,QAAjC,EAA2C,KAAKV,YAAhD,CAAd;;;;;;;6BAaO;;;;mBASH,KAAKK,KATF;UAELM,QAFK,UAELA,QAFK;UAGLL,QAHK,UAGLA,QAHK;UAILM,SAJK,UAILA,SAJK;UAKLC,SALK,UAKLA,SALK;UAMLC,aANK,UAMLA,aANK;UAOLC,cAPK,UAOLA,cAPK;UAQFV,KARE;;mBAUmB,KAAKd,KAVxB;UAUCyB,KAVD,UAUCA,KAVD;UAUQC,MAVR,UAUQA,MAVR;;;UAYDC,qBAAqB,OAAOL,SAAP,KAAqB,QAAhD;;UAEMM,YAAY,CAACL,iBAAiB,OAAlB,CAAlB;UACMM,aAAa,CAACL,kBAAkB,QAAnB,CAAnB;;UAEMd,8CACHkB,SADG,EACSH,KADT,2BAEHI,UAFG,EAEUH,MAFV,UAAN;;aAKOI,oBACLR,SADK,+BAGFK,qBAAqB,QAArB,GAAgC,KAH9B,EAGsC;eAAO,OAAKhB,SAAL,GAAiBoB,EAAxB;OAHtC,GAICJ,sBAAsBjB,KAJvB,EAKAI,KALA,GAOLgB,oBAAc,QAAd,EAAwB;cAChB,WADgB;oBAAA;aAGjB;iBAAO,OAAKd,aAAL,GAAqBe,EAA5B;SAHiB;gBAId,KAAK9B,gBAJS;uBAKP,IALO;kBAMZ,CAAC;OANb,CAPK,EAeL,OAAOmB,QAAP,KAAoB,UAApB,GACIA,SAAS,EAAEK,YAAF,EAASC,cAAT,EAAT,CADJ,GAEIM,eAASC,GAAT,CAAab,QAAb,EAAuB;eACrBc,qBAAeC,KAAf,IACIC,mBAAaD,KAAb,EAAoB,CAACd,SAAD,GAAaX,KAAb,GAAqB,IAAzC,CADJ,GAEIyB,KAHiB;OAAvB,CAjBC,CAAP;;;;;EAzEqCE;;AAApBtC,YACZuC,eAAe;aACT,KADS;;;;iBAKLC,SALK;kBAMJA;;AA4FpB,AAAO,SAASC,eAAT,CAAyBlB,SAAzB,EAAoC;SAClC;WAASQ,oBAAc/B,WAAd,aAA6BuB,oBAA7B,IAA2CR,KAA3C,EAAT;GAAP;;;;;;;;"}