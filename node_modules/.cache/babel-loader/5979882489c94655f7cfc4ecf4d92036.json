{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n} //Chess set\n\n\nconst chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n'];\nconst letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8']; //Set Board and Coordenates\n\nconst randomNumbers = () => getRandomInt(numbers.length);\n\nconst randomLetters = () => getRandomInt(letters.length);\n\nconst setBoard = [];\n\nconst randomCoordenates = () => {\n  const s = [];\n\n  for (let i = 0; i < 20; i++) {\n    s.push(letters[randomLetters()] + numbers[randomNumbers()]);\n  }\n\n  const coo = [...new Set(s)];\n\n  for (let i = 0; i < chessPieces.length; i++) {\n    setBoard.push(chessPieces[i] + '@' + coo[i]);\n  }\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        wKing = _useState2[0],\n        handlewKing = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bKing = _useState4[0],\n        handlebKing = _useState4[1];\n\n  const handleKings = () => {\n    const lW = letters[randomLetters()];\n    const nW = numbers[randomNumbers()];\n    const lB = letters[randomLetters()];\n    const nB = numbers[randomNumbers()];\n\n    if (coo.includes(lW + nW) == true && coo.includes(lB + nB) == true) {\n      console.log(coo);\n    } else {\n      const randomKings = ['K' + '@' + lW + nW, 'k' + '@' + lB + nB];\n      setBoard.push(randomKings[0], randomKings[1]);\n    }\n  };\n\n  handleKings();\n  return setBoard;\n}; //Handle Pawns and Kings\n\n\nconst handlePawns = () => {};\n\nfunction App() {\n  randomCoordenates();\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: setBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","useState","Chess","getRandomInt","max","Math","floor","random","chessPieces","letters","numbers","randomNumbers","length","randomLetters","setBoard","randomCoordenates","s","i","push","coo","Set","wKing","handlewKing","bKing","handlebKing","handleKings","lW","nW","lB","nB","includes","console","log","randomKings","handlePawns","App"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n//Chess set\nconst chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n'];\nconst letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n//Set Board and Coordenates\nconst randomNumbers = () => getRandomInt(numbers.length);\nconst randomLetters = () => getRandomInt(letters.length);\nconst setBoard = [];\nconst randomCoordenates = () => {\n  const s = [];\n  for (let i = 0; i < 20; i++) {\n    s.push(letters[randomLetters()] + numbers[randomNumbers()])\n\n  }\n  const coo = [...new Set(s)];\n\n  for (let i = 0; i < chessPieces.length; i++) {\n    setBoard.push(chessPieces[i] + '@' + coo[i])\n\n  }\n\n  const [wKing, handlewKing] = useState('')\n  const [bKing, handlebKing] = useState('')\n\n  const handleKings = () => {\n\n    const lW = letters[randomLetters()];\n    const nW = numbers[randomNumbers()];\n    const lB = letters[randomLetters()];\n    const nB = numbers[randomNumbers()];\n\n    if (coo.includes(lW + nW) == true && coo.includes(lB + nB) == true) {\n\n\n\n      console.log(coo)\n    }\n    else {\n      const randomKings = ['K' + '@' +\n        lW + nW, 'k' + '@' +\n        lB + nB];\n      setBoard.push(randomKings[0], randomKings[1])\n    }\n  }\n  handleKings()\n\n  return setBoard;\n}\n//Handle Pawns and Kings\nconst handlePawns = () => {\n\n\n}\n\n\n\n\n\n\nfunction App() {\n\n  randomCoordenates()\n\n\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={setBoard} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}