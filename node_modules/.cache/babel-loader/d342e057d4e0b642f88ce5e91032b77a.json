{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : factory(global.ReactResizeAware = global.ReactResizeAware || {}, global.React);\n})(this, function (exports, react) {\n  'use strict';\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  } //\n  // react-resize-aware component\n  //\n  // Triggers a `resize` event everytime the component changes its sizes\n  // MIT License\n  // Copyright 2016, Federico Zivolo\n  //\n\n\n  var style = {\n    display: 'block',\n    opacity: 0,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    zIndex: -1\n  };\n\n  var ResizeAware = function (_Component) {\n    _inherits(ResizeAware, _Component);\n\n    function ResizeAware() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, ResizeAware);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ResizeAware.__proto__ || Object.getPrototypeOf(ResizeAware)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleObjectLoad = function (evt) {\n        _this.setState({\n          resizeTarget: evt.target.contentDocument.defaultView\n        }, function () {\n          _this.state.resizeTarget.addEventListener('resize', _this.handleResize);\n\n          _this.handleResize();\n        });\n      }, _this.handleResize = function () {\n        var sizes = {\n          width: _this.container.offsetWidth,\n          height: _this.container.offsetHeight\n        };\n\n        _this.setState(sizes);\n\n        _this.props.onResize && _this.props.onResize(sizes);\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(ResizeAware, [{\n      key: 'componentDidMount',\n      // Init the resizeElement\n      value: function componentDidMount() {\n        this.resizeElement.data = 'about:blank';\n      } // Called when the object is loaded\n\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var resizeTarget = this.state.resizeTarget; // ensure the resizeTarget exists and is in fact an event listener\n        // this fixes an issue where contentDocument.defaultView is not a real window object\n        // as can be the case when used with react portals\n\n        var isListener = resizeTarget && typeof resizeTarget.removeEventListener === 'function';\n        isListener && resizeTarget.removeEventListener('resize', this.handleResize);\n      } // Function called on component resize\n\n    }, {\n      key: 'render',\n      value: function render() {\n        var _sizes,\n            _this2 = this;\n\n        var _props = this.props,\n            children = _props.children,\n            onResize = _props.onResize,\n            onlyEvent = _props.onlyEvent,\n            component = _props.component,\n            widthPropName = _props.widthPropName,\n            heightPropName = _props.heightPropName,\n            props = _objectWithoutProperties(_props, ['children', 'onResize', 'onlyEvent', 'component', 'widthPropName', 'heightPropName']);\n\n        var _state = this.state,\n            width = _state.width,\n            height = _state.height;\n        var hasCustomComponent = typeof component !== 'string';\n        var widthProp = [widthPropName || 'width'];\n        var heightProp = [heightPropName || 'height'];\n        var sizes = (_sizes = {}, _defineProperty(_sizes, widthProp, width), _defineProperty(_sizes, heightProp, height), _sizes);\n        return react.createElement(component, _extends(_defineProperty({}, hasCustomComponent ? 'getRef' : 'ref', function (el) {\n          return _this2.container = el;\n        }), hasCustomComponent && sizes, props), react.createElement('object', {\n          type: 'text/html',\n          style: style,\n          ref: function ref(el) {\n            return _this2.resizeElement = el;\n          },\n          onLoad: this.handleObjectLoad,\n          'aria-hidden': true,\n          tabIndex: -1\n        }), typeof children === 'function' ? children({\n          width: width,\n          height: height\n        }) : react.Children.map(children, function (child) {\n          return react.isValidElement(child) ? react.cloneElement(child, !onlyEvent ? sizes : null) : child;\n        }));\n      }\n    }]);\n\n    return ResizeAware;\n  }(react.Component);\n\n  ResizeAware.defaultProps = {\n    component: 'div',\n    // don't define here the defaults to avoid to break\n    // the render result of previous versions\n    // TODO: use defaultProps to define default values\n    widthPropName: undefined,\n    heightPropName: undefined\n  };\n\n  function makeResizeAware(component) {\n    return function (props) {\n      return react.createElement(ResizeAware, _extends({\n        component: component\n      }, props));\n    };\n  }\n\n  exports['default'] = ResizeAware;\n  exports.makeResizeAware = makeResizeAware;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../src/index.js"],"names":["style","ResizeAware","Component","defaultProps","undefined","state","handleObjectLoad","evt","defaultView","resizeTarget","isListener","handleResize","sizes","offsetHeight","children","onResize","onlyEvent","component","widthPropName","heightPropName","props","width","height","hasCustomComponent","widthProp","heightProp","isValidElement","cloneElement","createElement"],"mappings":"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","sourcesContent":["//\n// react-resize-aware component\n//\n// Triggers a `resize` event everytime the component changes its sizes\n// MIT License\n// Copyright 2016, Federico Zivolo\n//\n\nimport {\n  createElement,\n  Component,\n  Children,\n  cloneElement,\n  isValidElement,\n} from 'react';\n\nconst style = {\n  display: 'block',\n  opacity: 0,\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  height: '100%',\n  width: '100%',\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  zIndex: -1,\n};\n\nexport default class ResizeAware extends Component {\n  static defaultProps = {\n    component: 'div',\n    // don't define here the defaults to avoid to break\n    // the render result of previous versions\n    // TODO: use defaultProps to define default values\n    widthPropName: undefined,\n    heightPropName: undefined,\n  };\n  state = {};\n\n  // Init the resizeElement\n  componentDidMount() {\n    this.resizeElement.data = 'about:blank';\n  }\n\n  // Called when the object is loaded\n  handleObjectLoad = evt => {\n    this.setState(\n      {\n        resizeTarget: evt.target.contentDocument.defaultView,\n      },\n      () => {\n        this.state.resizeTarget.addEventListener('resize', this.handleResize);\n        this.handleResize();\n      }\n    );\n  };\n\n  componentWillUnmount() {\n    const { resizeTarget } = this.state;\n\n    // ensure the resizeTarget exists and is in fact an event listener\n    // this fixes an issue where contentDocument.defaultView is not a real window object\n    // as can be the case when used with react portals\n    const isListener =\n      resizeTarget && typeof resizeTarget.removeEventListener === 'function';\n\n    isListener && resizeTarget.removeEventListener('resize', this.handleResize);\n  }\n\n  // Function called on component resize\n  handleResize = () => {\n    const sizes = {\n      width: this.container.offsetWidth,\n      height: this.container.offsetHeight,\n    };\n    this.setState(sizes);\n    this.props.onResize && this.props.onResize(sizes);\n  };\n\n  render() {\n    const {\n      children,\n      onResize,\n      onlyEvent,\n      component,\n      widthPropName,\n      heightPropName,\n      ...props\n    } = this.props;\n    const { width, height } = this.state;\n\n    const hasCustomComponent = typeof component !== 'string';\n\n    const widthProp = [widthPropName || 'width'];\n    const heightProp = [heightPropName || 'height'];\n\n    const sizes = {\n      [widthProp]: width,\n      [heightProp]: height,\n    };\n\n    return createElement(\n      component,\n      {\n        [hasCustomComponent ? 'getRef' : 'ref']: el => (this.container = el),\n        ...(hasCustomComponent && sizes),\n        ...props,\n      },\n      createElement('object', {\n        type: 'text/html',\n        style,\n        ref: el => (this.resizeElement = el),\n        onLoad: this.handleObjectLoad,\n        'aria-hidden': true,\n        tabIndex: -1,\n      }),\n      typeof children === 'function'\n        ? children({ width, height })\n        : Children.map(children, child =>\n            isValidElement(child)\n              ? cloneElement(child, !onlyEvent ? sizes : null)\n              : child\n          )\n    );\n  }\n}\n\nexport function makeResizeAware(component) {\n  return props => createElement(ResizeAware, { component, ...props });\n}\n"]},"metadata":{},"sourceType":"script"}