{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Knight.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Knight = () => {\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\n  const _useState = useState(Number(1)),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useState3 = useState(Number(1)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['N@']),\n        _useState6 = _slicedToArray(_useState5, 1),\n        piece = _useState6[0];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const makeKnightMove = () => {\n    const randomMove = () => {\n      if (Number(Math.random()) > 0.49) {\n        setNumber(number + Number(2));\n        setIndex(index + Number(1));\n        console.log('Mov. type 1. (L Up and s right');\n      } else {\n        setNumber(number + Number(1));\n        setIndex(index + Number(2));\n        console.log('Mov. type 1. (s Up and L right');\n      }\n\n      console.log(position);\n    };\n\n    randomMove();\n    handlePosition([piece + letters[index] + number]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeKnightMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default Knight;","map":{"version":3,"sources":["/home/sony/chessro2/src/Knight.js"],"names":["React","useState","Chess","Knight","letters","Number","index","setIndex","number","setNumber","piece","position","handlePosition","makeKnightMove","randomMove","Math","random","console","log","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;;AADiB,oBAESH,QAAQ,CAACI,MAAM,CAAC,CAAD,CAAP,CAFjB;AAAA;AAAA,QAEVC,KAFU;AAAA,QAEHC,QAFG;;AAAA,qBAIWN,QAAQ,CAACI,MAAM,CAAC,CAAD,CAAP,CAJnB;AAAA;AAAA,QAIVG,MAJU;AAAA,QAIFC,SAJE;;AAAA,qBAKDR,QAAQ,CAAC,CAAC,IAAD,CAAD,CALP;AAAA;AAAA,QAKVS,KALU;;AAAA,qBAMkBT,QAAQ,CAAC,EAAD,CAN1B;AAAA;AAAA,QAMVU,QANU;AAAA,QAMAC,cANA;;AAQjB,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAG,MAAM;AAIrB,UAAIT,MAAM,CAACU,IAAI,CAACC,MAAL,EAAD,CAAN,GAAwB,IAA5B,EAAkC;AAC9BP,QAAAA,SAAS,CAACD,MAAM,GAAGH,MAAM,CAAC,CAAD,CAAhB,CAAT;AACAE,QAAAA,QAAQ,CAACD,KAAK,GAAGD,MAAM,CAAC,CAAD,CAAf,CAAR;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAGH,OAND,MAOK;AACDT,QAAAA,SAAS,CAACD,MAAM,GAAGH,MAAM,CAAC,CAAD,CAAhB,CAAT;AACAE,QAAAA,QAAQ,CAACD,KAAK,GAAGD,MAAM,CAAC,CAAD,CAAf,CAAR;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAEH;;AAIDD,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,KArBD;;AAsBAG,IAAAA,UAAU;AACVF,IAAAA,cAAc,CAAC,CAACF,KAAK,GAAGN,OAAO,CAACE,KAAD,CAAf,GAAyBE,MAA1B,CAAD,CAAd;AAGH,GA3BD;;AA6BA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGW,CAAD,IAAON,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,QAAf;AAAyB,IAAA,UAAU,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CA5CD;;AA8CA,eAAeR,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Knight = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const [index, setIndex] = useState(Number(1));\n\n    const [number, setNumber] = useState(Number(1));\n    const [piece] = useState(['N@']);\n    const [position, handlePosition] = useState([]);\n\n    const makeKnightMove = () => {\n        const randomMove = () => {\n\n\n\n            if (Number(Math.random()) > 0.49) {\n                setNumber(number + Number(2));\n                setIndex(index + Number(1));\n                console.log('Mov. type 1. (L Up and s right')\n\n\n            }\n            else {\n                setNumber(number + Number(1));\n                setIndex(index + Number(2));\n                console.log('Mov. type 1. (s Up and L right')\n\n            }\n\n\n\n            console.log(position);\n        }\n        randomMove();\n        handlePosition([piece + letters[index] + number]);\n\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeKnightMove(e.target.value)} > Move </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Knight;\n\n"]},"metadata":{},"sourceType":"module"}