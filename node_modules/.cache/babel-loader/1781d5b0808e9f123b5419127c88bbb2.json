{"ast":null,"code":"var _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction App() {\n  const randomKings = ['K' + '@' + squares[getRandomInt(squares.length)] + numbers[getRandomInt(numbers.length)], 'k' + '@' + squares[getRandomInt(squares.length)] + numbers[getRandomInt(numbers.length)]];\n  const chessPieces = ['R', 'P', 'Q', 'B', 'N', 'r', 'p', 'q', 'b', 'n'];\n  const squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n  const randomPiece = [chessPieces[getRandomInt(chessPieces.length + 1)] + '@' + squares[getRandomInt(squares.length + 1)] + numbers[getRandomInt(numbers.length + 1)]];\n  const p = [];\n\n  for (let i = 2; i < numbers.length; i++) {\n    p.push('p' + '@' + squares[getRandomInt(squares.length)] + i);\n    p.push('P' + '@' + squares[getRandomInt(squares.length)] + i);\n    p.push(randomPiece(getRandomInt(randomPiece.length)));\n  }\n\n  randomKings.push(randomPiece[0], p[getRandomInt(p.length)]);\n  p.push(randomKings[0], randomKings[1]);\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: p,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","Chess","getRandomInt","max","Math","floor","random","App","randomKings","squares","length","numbers","chessPieces","randomPiece","p","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,SAASI,GAAT,GAAe;AAEb,QAAMC,WAAW,GAAG,CAAC,MAAM,GAAN,GACnBC,OAAO,CAACP,YAAY,CAACO,OAAO,CAACC,MAAT,CAAb,CADY,GAEnBC,OAAO,CAACT,YAAY,CAACS,OAAO,CAACD,MAAT,CAAb,CAFW,EAGpB,MAAM,GAAN,GACAD,OAAO,CAACP,YAAY,CAACO,OAAO,CAACC,MAAT,CAAb,CADP,GAEAC,OAAO,CAACT,YAAY,CAACS,OAAO,CAACD,MAAT,CAAb,CALa,CAApB;AAQA,QAAME,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAApB;AACA,QAAMH,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AACA,QAAME,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AAGA,QAAME,WAAW,GAAG,CAACD,WAAW,CAACV,YAAY,CAACU,WAAW,CAACF,MAAZ,GAAqB,CAAtB,CAAb,CAAX,GACjB,GADiB,GACXD,OAAO,CAACP,YAAY,CAACO,OAAO,CAACC,MAAR,GAAiB,CAAlB,CAAb,CADI,GACiCC,OAAO,CAACT,YAAY,CAACS,OAAO,CAACD,MAAR,GAAiB,CAAlB,CAAb,CADzC,CAApB;AAGA,QAAMI,CAAC,GAAG,EAAV;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIJ,OAAO,CAACD,MAA7B,EAAsCK,CAAC,EAAvC,EAA2C;AACzCD,IAAAA,CAAC,CAACE,IAAF,CAAO,MAAM,GAAN,GAAYP,OAAO,CAACP,YAAY,CAACO,OAAO,CAACC,MAAT,CAAb,CAAnB,GAAoDK,CAA3D;AACAD,IAAAA,CAAC,CAACE,IAAF,CAAO,MAAM,GAAN,GAAYP,OAAO,CAACP,YAAY,CAACO,OAAO,CAACC,MAAT,CAAb,CAAnB,GAAoDK,CAA3D;AACAD,IAAAA,CAAC,CAACE,IAAF,CAAOH,WAAW,CAACX,YAAY,CAACW,WAAW,CAACH,MAAb,CAAb,CAAlB;AAED;;AAIDF,EAAAA,WAAW,CAACQ,IAAZ,CAAiBH,WAAW,CAAC,CAAD,CAA5B,EAAiCC,CAAC,CAACZ,YAAY,CAACY,CAAC,CAACJ,MAAH,CAAb,CAAlC;AACAI,EAAAA,CAAC,CAACE,IAAF,CAAOR,WAAW,CAAC,CAAD,CAAlB,EAAuBA,WAAW,CAAC,CAAD,CAAlC;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEM,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AAED,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction App() {\n\n  const randomKings = ['K' + '@' +\n    squares[getRandomInt(squares.length)] +\n    numbers[getRandomInt(numbers.length)],\n  'k' + '@' +\n  squares[getRandomInt(squares.length)] +\n  numbers[getRandomInt(numbers.length)]\n  ];\n\n  const chessPieces = ['R', 'P', 'Q', 'B', 'N', 'r', 'p', 'q', 'b', 'n'];\n  const squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n\n  const randomPiece = [chessPieces[getRandomInt(chessPieces.length + 1)]\n    + '@' + squares[getRandomInt(squares.length + 1)] + numbers[getRandomInt(numbers.length + 1)]];\n\n  const p = [];\n\n\n  for (let i = 2; i < (numbers.length); i++) {\n    p.push('p' + '@' + squares[getRandomInt(squares.length)] + i)\n    p.push('P' + '@' + squares[getRandomInt(squares.length)] + i)\n    p.push(randomPiece(getRandomInt(randomPiece.length)))\n\n  }\n\n\n\n  randomKings.push(randomPiece[0], p[getRandomInt(p.length)])\n  p.push(randomKings[0], randomKings[1])\n\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={p} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}