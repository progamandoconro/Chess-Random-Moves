{"ast":null,"code":"var _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction App() {\n  const chessPieces = ['R', 'P', 'Q', 'B', 'N', 'r', 'p', 'q', 'b', 'n'];\n  const squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n  const randomKings = ['K' + '@' + squares[getRandomInt(squares.length)] + numbers[getRandomInt(numbers.length)], 'k' + '@' + squares[getRandomInt(squares.length)] + numbers[getRandomInt(numbers.length)]];\n  const randomPieces = [];\n\n  for (let i = 0; i < 10; i++) {\n    const randomPiece = [chessPieces[getRandomInt(chessPieces.length + 1)] + '@' + squares[getRandomInt(squares.length + 1)] + numbers[getRandomInt(numbers.length + 1)]];\n    randomPieces.push(randomPiece[0]);\n  }\n\n  const p = [];\n\n  for (let i = 2; i < numbers.length; i++) {\n    p.push('p' + '@' + squares[getRandomInt(squares.length)] + i);\n    p.push('P' + '@' + squares[getRandomInt(squares.length)] + i);\n\n    for (let i = 0; i < randomPieces.length - 2; i++) {\n      p.push(randomPieces[10]);\n    }\n  }\n\n  p.push(randomKings[0], randomKings[1]);\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: p,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","Chess","getRandomInt","max","Math","floor","random","App","chessPieces","squares","numbers","randomKings","length","randomPieces","i","randomPiece","push","p"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction App() {\n\n  const chessPieces = ['R', 'P', 'Q', 'B', 'N', 'r', 'p', 'q', 'b', 'n'];\n  const squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n  const randomKings = ['K' + '@' +\n    squares[getRandomInt(squares.length)] +\n    numbers[getRandomInt(numbers.length)],\n  'k' + '@' +\n  squares[getRandomInt(squares.length)] +\n  numbers[getRandomInt(numbers.length)]\n  ];\n\n  const randomPieces = []\n\n\n  for (let i = 0; i < 10; i++) {\n    const randomPiece = [chessPieces[getRandomInt(chessPieces.length + 1)]\n      + '@' + squares[getRandomInt(squares.length + 1)] + numbers[getRandomInt(numbers.length + 1)]];\n\n    randomPieces.push(randomPiece[0])\n  }\n\n\n\n\n  const p = [];\n\n  for (let i = 2; i < (numbers.length); i++) {\n    p.push('p' + '@' + squares[getRandomInt(squares.length)] + i)\n    p.push('P' + '@' + squares[getRandomInt(squares.length)] + i)\n    for (let i = 0; i < randomPieces.length - 2; i++) {\n      p.push(randomPieces[10])\n    }\n  }\n\n  p.push(randomKings[0], randomKings[1])\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={p} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}