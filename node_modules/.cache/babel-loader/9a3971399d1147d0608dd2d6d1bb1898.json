{"ast":null,"code":"const myRandomPositions = () => {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const chessPieces = ['K', 'k', 'R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'];\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8']; //Set Board and Coordenates\n\n  const randomNumbers = () => getRandomInt(numbers.length);\n\n  const randomLetters = () => getRandomInt(letters.length);\n\n  const setBoard = [];\n\n  const randomCoordenates = () => {\n    const s = [];\n    const index = [];\n\n    for (let i = 0; i < 40; i++) {\n      s.push(letters[randomLetters()] + numbers[randomNumbers()]);\n      index.push(k + 1);\n    }\n\n    const coo = [...new Set(s)];\n\n    for (let i = 0; i < chessPieces.length; i++) {\n      setBoard.push(chessPieces[i] + '@' + coo[i]);\n    } // const forbittenSquares = ['P@a1', 'P@b1', 'P@c1', 'P@d1', 'P@e1', 'P@f1', 'P@g1', 'P@h1', 'P@a8', 'P@b8', 'P@c8', 'P@d8', 'P@e8', 'P@f8', 'P@g8', 'P@h8', 'P@a7', 'P@b7', 'P@c7', 'P@d7', 'P@e7', 'P@f7', 'P@g7', 'P@h7', 'p@a1', 'p@b1', 'p@c1', 'p@d1', 'p@e1', 'p@f1', 'p@g1', 'p@h1', 'p@a8', 'p@b8', 'p@c8', 'p@d8', 'p@e8', 'p@f8', 'p@g8', 'p@h8', 'p@a2', 'p@b2', 'p@c2', 'p@d2', 'p@e2', 'p@f2', 'p@g2', 'p@h2'];\n    // const filtered = [];\n\n\n    return setBoard;\n  };\n\n  return randomCoordenates();\n};\n\nexport default myRandomPositions;","map":{"version":3,"sources":["/home/sony/chessro2/src/RandomPositions.js"],"names":["myRandomPositions","getRandomInt","max","Math","floor","random","chessPieces","letters","numbers","randomNumbers","length","randomLetters","setBoard","randomCoordenates","s","index","i","push","k","coo","Set"],"mappings":"AACA,MAAMA,iBAAiB,GAAG,MAAM;AAE5B,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACH;;AAED,QAAMI,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,EAAmI,GAAnI,EAAwI,GAAxI,EAA6I,GAA7I,EAAkJ,GAAlJ,EAAuJ,GAAvJ,EAA4J,GAA5J,CAApB;AACA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AACA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB,CAR4B,CAU5B;;AACA,QAAMC,aAAa,GAAG,MAAMR,YAAY,CAACO,OAAO,CAACE,MAAT,CAAxC;;AACA,QAAMC,aAAa,GAAG,MAAMV,YAAY,CAACM,OAAO,CAACG,MAAT,CAAxC;;AACA,QAAME,QAAQ,GAAG,EAAjB;;AACA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,CAAC,GAAG,EAAV;AACA,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBF,MAAAA,CAAC,CAACG,IAAF,CAAOV,OAAO,CAACI,aAAa,EAAd,CAAP,GAA2BH,OAAO,CAACC,aAAa,EAAd,CAAzC;AACAM,MAAAA,KAAK,CAACE,IAAN,CAAWC,CAAC,GAAG,CAAf;AACH;;AACD,UAAMC,GAAG,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQN,CAAR,CAAJ,CAAZ;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACI,MAAhC,EAAwCM,CAAC,EAAzC,EAA6C;AACzCJ,MAAAA,QAAQ,CAACK,IAAT,CAAcX,WAAW,CAACU,CAAD,CAAX,GAAiB,GAAjB,GAAuBG,GAAG,CAACH,CAAD,CAAxC;AAEH,KAZ2B,CAc5B;AACA;;;AAGA,WAAOJ,QAAP;AACH,GAnBD;;AAsBA,SAAOC,iBAAiB,EAAxB;AACH,CArCD;;AAuCA,eAAeb,iBAAf","sourcesContent":["\nconst myRandomPositions = () => {\n\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    const chessPieces = ['K', 'k', 'R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'];\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n    //Set Board and Coordenates\n    const randomNumbers = () => getRandomInt(numbers.length);\n    const randomLetters = () => getRandomInt(letters.length);\n    const setBoard = [];\n    const randomCoordenates = () => {\n        const s = [];\n        const index = [];\n        for (let i = 0; i < 40; i++) {\n            s.push(letters[randomLetters()] + numbers[randomNumbers()])\n            index.push(k + 1)\n        }\n        const coo = [...new Set(s)];\n\n        for (let i = 0; i < chessPieces.length; i++) {\n            setBoard.push(chessPieces[i] + '@' + coo[i])\n\n        }\n\n        // const forbittenSquares = ['P@a1', 'P@b1', 'P@c1', 'P@d1', 'P@e1', 'P@f1', 'P@g1', 'P@h1', 'P@a8', 'P@b8', 'P@c8', 'P@d8', 'P@e8', 'P@f8', 'P@g8', 'P@h8', 'P@a7', 'P@b7', 'P@c7', 'P@d7', 'P@e7', 'P@f7', 'P@g7', 'P@h7', 'p@a1', 'p@b1', 'p@c1', 'p@d1', 'p@e1', 'p@f1', 'p@g1', 'p@h1', 'p@a8', 'p@b8', 'p@c8', 'p@d8', 'p@e8', 'p@f8', 'p@g8', 'p@h8', 'p@a2', 'p@b2', 'p@c2', 'p@d2', 'p@e2', 'p@f2', 'p@g2', 'p@h2'];\n        // const filtered = [];\n\n\n        return setBoard;\n    }\n\n\n    return randomCoordenates();\n}\n\nexport default myRandomPositions;"]},"metadata":{},"sourceType":"module"}