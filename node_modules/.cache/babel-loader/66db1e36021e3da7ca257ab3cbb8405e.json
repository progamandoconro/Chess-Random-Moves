{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Board.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport myRandomPositions from './RandomPositions';\n\nconst Board = () => {\n  const _useState = useState(myRandomPositions()),\n        _useState2 = _slicedToArray(_useState, 2),\n        position = _useState2[0],\n        handlePosition = _useState2[1];\n\n  const makeRandomPosition = () => {\n    handlePosition(myRandomPositions());\n    console.log(myRandomPositions());\n  };\n\n  const forbittenSquares = ['P@a1', 'P@b1', 'P@c1', 'P@d1', 'P@e1', 'P@f1', 'P@g1', 'P@h1', 'P@a8', 'P@b8', 'P@c8', 'P@d8', 'P@e8', 'P@f8', 'P@g8', 'P@h8', 'P@a7', 'P@b7', 'P@c7', 'P@d7', 'P@e7', 'P@f7', 'P@g7', 'P@h7', 'p@a1', 'p@b1', 'p@c1', 'p@d1', 'p@e1', 'p@f1', 'p@g1', 'p@h1', 'p@a8', 'p@b8', 'p@c8', 'p@d8', 'p@e8', 'p@f8', 'p@g8', 'p@h8', 'p@a2', 'p@b2', 'p@c2', 'p@d2', 'p@e2', 'p@f2', 'p@g2', 'p@h2'];\n  const setBoard = position;\n\n  for (let i = 0; i < forbittenSquares.length; i++) {\n    setBoard.includes(item => item === forbittenSquares[i]);\n  }\n\n  console.log(setBoard);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => makeRandomPosition(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Random\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Chess, {\n    pieces: setBoard,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default Board;","map":{"version":3,"sources":["/home/sony/chessro2/src/Board.js"],"names":["React","useState","Chess","myRandomPositions","Board","position","handlePosition","makeRandomPosition","console","log","forbittenSquares","setBoard","i","length","includes","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,mBAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBAEmBH,QAAQ,CAACE,iBAAiB,EAAlB,CAF3B;AAAA;AAAA,QAETE,QAFS;AAAA,QAECC,cAFD;;AAIhB,QAAMC,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,cAAc,CAACH,iBAAiB,EAAlB,CAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAiB,EAA7B;AACH,GAHD;;AAKA,QAAMO,gBAAgB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,EAAiF,MAAjF,EAAyF,MAAzF,EAAiG,MAAjG,EAAyG,MAAzG,EAAiH,MAAjH,EAAyH,MAAzH,EAAiI,MAAjI,EAAyI,MAAzI,EAAiJ,MAAjJ,EAAyJ,MAAzJ,EAAiK,MAAjK,EAAyK,MAAzK,EAAiL,MAAjL,EAAyL,MAAzL,EAAiM,MAAjM,EAAyM,MAAzM,EAAiN,MAAjN,EAAyN,MAAzN,EAAiO,MAAjO,EAAyO,MAAzO,EAAiP,MAAjP,EAAyP,MAAzP,EAAiQ,MAAjQ,EAAyQ,MAAzQ,EAAiR,MAAjR,EAAyR,MAAzR,EAAiS,MAAjS,EAAyS,MAAzS,EAAiT,MAAjT,EAAyT,MAAzT,EAAiU,MAAjU,EAAyU,MAAzU,EAAiV,MAAjV,EAAyV,MAAzV,EAAiW,MAAjW,EAAyW,MAAzW,EAAiX,MAAjX,EAAyX,MAAzX,CAAzB;AACA,QAAMC,QAAQ,GAAGN,QAAjB;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,gBAAgB,CAACG,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAE9CD,IAAAA,QAAQ,CAACG,QAAT,CAAkBC,IAAI,IAAIA,IAAI,KAAKL,gBAAgB,CAACE,CAAD,CAAnD;AAEH;;AAEDJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMJ,kBAAkB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEI,QADZ;AAGI,IAAA,UAAU,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAaH,CA/BD;;AAiCA,eAAeP,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Chess from 'react-chess'\nimport myRandomPositions from './RandomPositions'\n\nconst Board = () => {\n\n    const [position, handlePosition] = useState(myRandomPositions());\n\n    const makeRandomPosition = () => {\n        handlePosition(myRandomPositions());\n        console.log(myRandomPositions())\n    }\n\n    const forbittenSquares = ['P@a1', 'P@b1', 'P@c1', 'P@d1', 'P@e1', 'P@f1', 'P@g1', 'P@h1', 'P@a8', 'P@b8', 'P@c8', 'P@d8', 'P@e8', 'P@f8', 'P@g8', 'P@h8', 'P@a7', 'P@b7', 'P@c7', 'P@d7', 'P@e7', 'P@f7', 'P@g7', 'P@h7', 'p@a1', 'p@b1', 'p@c1', 'p@d1', 'p@e1', 'p@f1', 'p@g1', 'p@h1', 'p@a8', 'p@b8', 'p@c8', 'p@d8', 'p@e8', 'p@f8', 'p@g8', 'p@h8', 'p@a2', 'p@b2', 'p@c2', 'p@d2', 'p@e2', 'p@f2', 'p@g2', 'p@h2'];\n    const setBoard = position;\n    for (let i = 0; i < forbittenSquares.length; i++) {\n\n        setBoard.includes(item => item === forbittenSquares[i])\n\n    }\n\n    console.log(setBoard)\n    return (\n        <div >\n            <button onClick={() => makeRandomPosition()} >\n                Random\n            </button>\n            <hr />\n\n            <Chess\n                pieces={setBoard}\n\n                allowMoves={false} />\n        </div>\n    )\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}