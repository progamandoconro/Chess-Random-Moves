{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Bishop.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Bishop = () => {\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\n  const _useState = useState(['a']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  const _useState3 = useState(Number(1)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['B@']),\n        _useState6 = _slicedToArray(_useState5, 1),\n        piece = _useState6[0];\n\n  const _useState7 = useState(Number(0)),\n        _useState8 = _slicedToArray(_useState7, 2),\n        index = _useState8[0],\n        setIndex = _useState8[1];\n\n  const _useState9 = useState(['B@e5']),\n        _useState10 = _slicedToArray(_useState9, 2),\n        position = _useState10[0],\n        handlePosition = _useState10[1];\n\n  const _useState11 = useState(['e5']),\n        _useState12 = _slicedToArray(_useState11, 2),\n        diagonal = _useState12[0],\n        setDiagonal = _useState12[1];\n\n  const _useState13 = useState('[]'),\n        _useState14 = _slicedToArray(_useState13, 2),\n        move = _useState14[0],\n        setMove = _useState14[1];\n\n  const n = Math.floor(Math.random() * numbers.length);\n\n  const makeBishopMove = () => {\n    //black squares\n    //short diagonals\n    const mov1BB = ['a1'];\n    const mov2BB = ['a3', 'b2', 'c1'];\n    const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n    const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n    const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n    const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n    const mov7BB = ['f8', 'g7', 'h6'];\n    const mov8BB = ['h8']; //long diagonals \n\n    const mov1GDBB = ['g1', 'h2'];\n    const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n    const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n    const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n    const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n    const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n    const mov7GDBB = ['a7', 'b8'];\n    const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n    const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n    const bishopMove = () => {\n      if (Number(Math.random()) > 0.49) {\n        const n = Math.floor(Math.random() * allMoves2.length);\n\n        for (let index = 0; index < allMoves2.length; index++) {\n          const element = allMoves2[index];\n          const d = element.filter(e => diagonal.includes(e));\n          setDiagonal(d);\n          console.log(d);\n        }\n      } else {\n        const n = Math.floor(Math.random() * allMoves2.length);\n        const a = allMoves[n];\n        const d = a.filter(element => diagonal.includes(element));\n        console.log(d);\n        setDiagonal(d);\n      }\n\n      console.log(diagonal);\n    };\n\n    bishopMove();\n    handlePosition(['B@' + diagonal]);\n    console.log(position, diagonal);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeBishopMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \" Move \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }));\n};\n\nexport default Bishop;","map":{"version":3,"sources":["/home/sony/chessro2/src/Bishop.js"],"names":["React","useState","Chess","Bishop","letters","letter","setLetter","numbers","Number","number","setNumber","piece","index","setIndex","position","handlePosition","diagonal","setDiagonal","move","setMove","n","Math","floor","random","length","makeBishopMove","mov1BB","mov2BB","mov3BB","mov4BB","mov5BB","mov6BB","mov7BB","mov8BB","mov1GDBB","mov2GDBB","mov3GDBB","mov4GDBB","mov5GDBB","mov6GDBB","mov7GDBB","allMoves","allMoves2","bishopMove","element","d","filter","e","includes","console","log","a","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Bishop = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const [letter, setLetter] = useState(['a']);\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    const [number, setNumber] = useState(Number(1));\n    const [piece] = useState(['B@']);\n    const [index, setIndex] = useState(Number(0));\n    const [position, handlePosition] = useState(['B@e5']);\n    const [diagonal, setDiagonal] = useState(['e5'])\n    const [move, setMove] = useState('[]')\n\n\n    const n = Math.floor(Math.random() * numbers.length);\n\n\n    const makeBishopMove = () => {\n\n        //black squares\n\n        //short diagonals\n        const mov1BB = ['a1'];\n        const mov2BB = ['a3', 'b2', 'c1'];\n        const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n        const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n        const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n        const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n        const mov7BB = ['f8', 'g7', 'h6'];\n        const mov8BB = ['h8'];\n\n\n        //long diagonals \n        const mov1GDBB = ['g1', 'h2'];\n        const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n        const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n        const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n        const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n        const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n        const mov7GDBB = ['a7', 'b8'];\n\n\n        const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n        const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n\n\n        const bishopMove = () => {\n\n\n\n            if (Number(Math.random()) > 0.49) {\n                const n = Math.floor(Math.random() * allMoves2.length)\n\n\n                for (let index = 0; index < allMoves2.length; index++) {\n                    const element = allMoves2[index];\n                    const d = element.filter(e => diagonal.includes(e));\n                    setDiagonal(d)\n                    console.log(d)\n\n                }\n\n\n\n\n\n            }\n\n            else {\n                const n = Math.floor(Math.random() * allMoves2.length)\n                const a = allMoves[n];\n\n                const d = a.filter(element => diagonal.includes(element));\n                console.log(d)\n\n                setDiagonal(d)\n            }\n            console.log(diagonal);\n\n        }\n\n\n\n\n        bishopMove();\n\n\n\n\n\n        handlePosition(['B@' + diagonal]);\n        console.log(position, diagonal);\n\n\n\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeBishopMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Bishop;"]},"metadata":{},"sourceType":"module"}