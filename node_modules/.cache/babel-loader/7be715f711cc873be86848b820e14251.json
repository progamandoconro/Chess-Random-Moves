{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Bishop.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Bishop = () => {\n  const _useState = useState(['B@']),\n        _useState2 = _slicedToArray(_useState, 1),\n        piece = _useState2[0];\n\n  const _useState3 = useState(['B@e5']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        position = _useState4[0],\n        handlePosition = _useState4[1];\n\n  const _useState5 = useState(['e5']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        diagonal = _useState6[0],\n        setDiagonal = _useState6[1];\n\n  const makeBishopMove = () => {\n    //black squares\n    //short diagonals\n    const mov1BB = ['a1'];\n    const mov2BB = ['a3', 'b2', 'c1'];\n    const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n    const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n    const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n    const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n    const mov7BB = ['f8', 'g7', 'h6'];\n    const mov8BB = ['h8']; //long diagonals \n\n    const mov1GDBB = ['g1', 'h2'];\n    const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n    const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n    const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n    const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n    const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n    const mov7GDBB = ['a7', 'b8'];\n    const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n    const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n    const bishopMove = () => {\n      if (Number(Math.random()) > 0.49) {\n        const d = diagonal.filter(e => allMoves2.includes(e));\n        const n = Math.floor(Math.random() * d.length);\n        setDiagonal(d);\n        console.log(d, diagonal);\n      } else {\n        const d = diagonal.filter(e => allMoves.includes(e.includes));\n        const n = Math.floor(Math.random() * d.length);\n        setDiagonal(d);\n        console.log(d, diagonal);\n      }\n    };\n\n    bishopMove();\n    handlePosition([piece + diagonal]);\n    console.log(position, diagonal);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeBishopMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" Move \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n};\n\nexport default Bishop;","map":{"version":3,"sources":["/home/sony/chessro2/src/Bishop.js"],"names":["React","useState","Chess","Bishop","piece","position","handlePosition","diagonal","setDiagonal","makeBishopMove","mov1BB","mov2BB","mov3BB","mov4BB","mov5BB","mov6BB","mov7BB","mov8BB","mov1GDBB","mov2GDBB","mov3GDBB","mov4GDBB","mov5GDBB","mov6GDBB","mov7GDBB","allMoves","allMoves2","bishopMove","Number","Math","random","d","filter","e","includes","n","floor","length","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Bishop = () => {\n    const [piece] = useState(['B@']);\n    const [position, handlePosition] = useState(['B@e5']);\n    const [diagonal, setDiagonal] = useState(['e5'])\n\n    const makeBishopMove = () => {\n\n        //black squares\n\n        //short diagonals\n        const mov1BB = ['a1'];\n        const mov2BB = ['a3', 'b2', 'c1'];\n        const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n        const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n        const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n        const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n        const mov7BB = ['f8', 'g7', 'h6'];\n        const mov8BB = ['h8'];\n\n\n        //long diagonals \n        const mov1GDBB = ['g1', 'h2'];\n        const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n        const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n        const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n        const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n        const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n        const mov7GDBB = ['a7', 'b8'];\n\n\n        const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n        const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n\n        const bishopMove = () => {\n\n            if (Number(Math.random()) > 0.49) {\n                const d = diagonal.filter(e => allMoves2.includes(e));\n                const n = Math.floor(Math.random() * d.length)\n\n                setDiagonal(d);\n                console.log(d, diagonal);\n\n            }\n\n            else {\n                const d = diagonal.filter(e => allMoves.includes(e.includes));\n                const n = Math.floor(Math.random() * d.length);\n\n                setDiagonal(d);\n                console.log(d, diagonal);\n\n            }\n\n        }\n        bishopMove();\n        handlePosition([piece + diagonal]);\n        console.log(position, diagonal);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeBishopMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Bishop;"]},"metadata":{},"sourceType":"module"}