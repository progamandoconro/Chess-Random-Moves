{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/BishopLS.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst BishopLightSquares = () => {\n  const _useState = useState(['B@']),\n        _useState2 = _slicedToArray(_useState, 1),\n        piece = _useState2[0];\n\n  const _useState3 = useState(['B@e4']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        position = _useState4[0],\n        handlePosition = _useState4[1];\n\n  const _useState5 = useState(['e4']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        diagonal = _useState6[0],\n        setDiagonal = _useState6[1]; //light squares\n  //short diagonals\n\n\n  const mov1LB = ['a8'];\n  const mov2LB = ['a6', 'b7', 'c8'];\n  const mov3LB = ['a4', 'b5', 'c6', 'd7', 'e8'];\n  const mov4LB = ['a2', 'b3', 'c4', 'd4', 'e6', 'f7', 'g8'];\n  const mov5LB = ['b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7'];\n  const mov6LB = ['d1', 'e2', 'f3', 'g4', 'h5'];\n  const mov7LB = ['f1', 'g2', 'h3'];\n  const mov8LB = ['h1']; //long diagonals \n\n  const mov1GDLB = ['g8', 'h7'];\n  const mov2GDLB = ['e8', 'f7', 'g6', 'h5'];\n  const mov3GDLB = ['c8', 'd7', 'e6', 'f5', 'g4', 'h3'];\n  const mov4GDLB = ['a8', 'b7', 'c6', 'd5', 'e4', 'f3', 'g2', 'h1'];\n  const mov5GDLB = ['a6', 'b5', 'c4', 'd3', 'e2', 'f1'];\n  const mov6GDLB = ['a4', 'b3', 'c2', 'd1'];\n  const mov7GDLB = ['a2', 'b1'];\n  const allMoves = [mov1LB, mov2LB, mov3LB, mov4LB, mov5LB, mov6LB, mov7LB, mov8LB];\n  const allMoves2 = [mov1GDLB, mov2GDLB, mov3GDLB, mov4GDLB, mov5GDLB, mov6GDLB, mov7GDLB];\n\n  const randomMoveBishopLightSquares = array => {\n    for (let index = 0; index < array.length; index++) {\n      const cond = diagonal.some(val => array[index].indexOf(val) !== -1);\n\n      if (cond === true) {\n        const d = array[index];\n        const n = Math.floor(Math.random() * d.length);\n        setDiagonal([d[n]]);\n      }\n    }\n  };\n\n  const makeBishopLightSquaresMoveLightSquares = () => {\n    if (Number(Math.random()) > 0.49) {\n      randomMoveBishopLightSquares(allMoves2);\n    } else {\n      randomMoveBishopLightSquares(allMoves);\n    }\n\n    handlePosition([piece + diagonal]);\n    console.log(position, diagonal);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeBishopLightSquaresMoveLightSquares(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Move \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nexport default BishopLightSquares;","map":{"version":3,"sources":["/home/sony/chessro2/src/BishopLS.js"],"names":["React","useState","Chess","BishopLightSquares","piece","position","handlePosition","diagonal","setDiagonal","mov1LB","mov2LB","mov3LB","mov4LB","mov5LB","mov6LB","mov7LB","mov8LB","mov1GDLB","mov2GDLB","mov3GDLB","mov4GDLB","mov5GDLB","mov6GDLB","mov7GDLB","allMoves","allMoves2","randomMoveBishopLightSquares","array","index","length","cond","some","val","indexOf","d","n","Math","floor","random","makeBishopLightSquaresMoveLightSquares","Number","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst BishopLightSquares = () => {\n    const [piece] = useState(['B@']);\n    const [position, handlePosition] = useState(['B@e4']);\n    const [diagonal, setDiagonal] = useState(['e4']);\n\n    //light squares\n\n    //short diagonals\n    const mov1LB = ['a8'];\n    const mov2LB = ['a6', 'b7', 'c8'];\n    const mov3LB = ['a4', 'b5', 'c6', 'd7', 'e8'];\n    const mov4LB = ['a2', 'b3', 'c4', 'd4', 'e6', 'f7', 'g8'];\n    const mov5LB = ['b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7'];\n    const mov6LB = ['d1', 'e2', 'f3', 'g4', 'h5'];\n    const mov7LB = ['f1', 'g2', 'h3'];\n    const mov8LB = ['h1'];\n\n    //long diagonals \n    const mov1GDLB = ['g8', 'h7'];\n    const mov2GDLB = ['e8', 'f7', 'g6', 'h5'];\n    const mov3GDLB = ['c8', 'd7', 'e6', 'f5', 'g4', 'h3'];\n    const mov4GDLB = ['a8', 'b7', 'c6', 'd5', 'e4', 'f3', 'g2', 'h1'];\n    const mov5GDLB = ['a6', 'b5', 'c4', 'd3', 'e2', 'f1'];\n    const mov6GDLB = ['a4', 'b3', 'c2', 'd1'];\n    const mov7GDLB = ['a2', 'b1'];\n\n    const allMoves = [mov1LB, mov2LB, mov3LB, mov4LB, mov5LB, mov6LB, mov7LB, mov8LB];\n    const allMoves2 = [mov1GDLB, mov2GDLB, mov3GDLB, mov4GDLB, mov5GDLB, mov6GDLB, mov7GDLB];\n\n    const randomMoveBishopLightSquares = (array) => {\n\n        for (let index = 0; index < array.length; index++) {\n\n            const cond = diagonal.some((val) => array[index].indexOf(val) !== -1);\n\n            if (cond === true) {\n                const d = array[index];\n                const n = Math.floor(Math.random() * d.length);\n                setDiagonal([d[n]]);\n            }\n        }\n    }\n\n    const makeBishopLightSquaresMoveLightSquares = () => {\n\n        if (Number(Math.random()) > 0.49) {\n            randomMoveBishopLightSquares(allMoves2);\n        }\n\n        else {\n            randomMoveBishopLightSquares(allMoves);\n        }\n\n        handlePosition([piece + diagonal]);\n        console.log(position, diagonal);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeBishopLightSquaresMoveLightSquares(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default BishopLightSquares;"]},"metadata":{},"sourceType":"module"}