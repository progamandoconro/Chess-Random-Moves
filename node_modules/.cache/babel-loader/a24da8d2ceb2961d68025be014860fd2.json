{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Pawn.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Moves = () => {\n  const _useState = useState(['e']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState([2]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['P@']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        piece = _useState6[0],\n        setPiece = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const makeRandomMove = e => {\n    if (Number(number) === 2) {\n      setNumber(Number(number) + 2);\n    } else setNumber(Number(number) + 1);\n\n    if (Number(number) >= 7) {\n      setPiece('Q@');\n\n      if (Number(number) >= 8) {\n        setPiece('P@');\n        setNumber(2);\n      }\n    }\n\n    handlePosition([piece + letter + number]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Pawn promotion\"), React.createElement(\"button\", {\n    onClick: e => makeRandomMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default Moves;","map":{"version":3,"sources":["/home/sony/chessro2/src/Pawn.js"],"names":["React","useState","Chess","Moves","letter","setLetter","number","setNumber","piece","setPiece","position","handlePosition","makeRandomMove","e","Number","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBAEYF,QAAQ,CAAC,CAAC,GAAD,CAAD,CAFpB;AAAA;AAAA,QAETG,MAFS;AAAA,QAEDC,SAFC;;AAAA,qBAGYJ,QAAQ,CAAC,CAAC,CAAD,CAAD,CAHpB;AAAA;AAAA,QAGTK,MAHS;AAAA,QAGDC,SAHC;;AAAA,qBAIUN,QAAQ,CAAC,CAAC,IAAD,CAAD,CAJlB;AAAA;AAAA,QAITO,KAJS;AAAA,QAIFC,QAJE;;AAAA,qBAMmBR,QAAQ,CAAC,EAAD,CAN3B;AAAA;AAAA,QAMTS,QANS;AAAA,QAMCC,cAND;;AAQhB,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAE1B,QAAIC,MAAM,CAACR,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtBC,MAAAA,SAAS,CAACO,MAAM,CAACR,MAAD,CAAN,GAAiB,CAAlB,CAAT;AACH,KAFD,MAIKC,SAAS,CAACO,MAAM,CAACR,MAAD,CAAN,GAAiB,CAAlB,CAAT;;AAEL,QAAIQ,MAAM,CAACR,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AACrBG,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,UAAIK,MAAM,CAACR,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AACrBG,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,QAAAA,SAAS,CAAC,CAAD,CAAT;AACH;AAEJ;;AAEDI,IAAAA,cAAc,CAAC,CAACH,KAAK,GAAGJ,MAAR,GAAiBE,MAAlB,CAAD,CAAd;AAEH,GApBD;;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,IAAA,OAAO,EAAGO,CAAD,IAAOD,cAAc,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEN,QAAf;AAAyB,IAAA,UAAU,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH,CAtCD;;AAwCA,eAAeP,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Chess from 'react-chess'\n\nconst Moves = () => {\n\n    const [letter, setLetter] = useState(['e']);\n    const [number, setNumber] = useState([2])\n    const [piece, setPiece] = useState(['P@'])\n\n    const [position, handlePosition] = useState([]);\n\n    const makeRandomMove = (e) => {\n\n        if (Number(number) === 2) {\n            setNumber(Number(number) + 2);\n        }\n\n        else setNumber(Number(number) + 1);\n\n        if (Number(number) >= 7) {\n            setPiece('Q@');\n\n            if (Number(number) >= 8) {\n                setPiece('P@');\n                setNumber(2)\n            }\n\n        }\n\n        handlePosition([piece + letter + number])\n\n    }\n\n    return (\n        <div >\n            <h1>Pawn promotion</h1>\n            <button onClick={(e) => makeRandomMove(e.target.value)} > Move </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Moves;"]},"metadata":{},"sourceType":"module"}