{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Bishop.js\";\nimport React from 'react';\nimport Chess from 'react-chess';\n\nconst Bishop = () => {\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  const _useState = useState(['b']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['B@']),\n        _useState6 = _slicedToArray(_useState5, 1),\n        piece = _useState6[0];\n\n  const _useState7 = useState(['B@a1']),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const makeBishopMove = () => {\n    const randomMove = () => {\n      const n = Math.floor(Math.random() * numbers.length);\n\n      if (Number(Math.random()) > 0.49) {\n        setNumber(numbers[n]);\n      } else {\n        setLetter(letters[n]);\n      }\n    };\n\n    randomMove();\n    handlePosition([piece + letter + number]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeBishopMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default Bishop;","map":{"version":3,"sources":["/home/sony/chessro2/src/Bishop.js"],"names":["React","Chess","Bishop","letters","numbers","useState","letter","setLetter","number","setNumber","piece","position","handlePosition","makeBishopMove","randomMove","n","Math","floor","random","length","Number","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AACA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;;AAFiB,oBAGWC,QAAQ,CAAC,CAAC,GAAD,CAAD,CAHnB;AAAA;AAAA,QAGVC,MAHU;AAAA,QAGFC,SAHE;;AAAA,qBAIWF,QAAQ,CAAC,CAAD,CAJnB;AAAA;AAAA,QAIVG,MAJU;AAAA,QAIFC,SAJE;;AAAA,qBAKDJ,QAAQ,CAAC,CAAC,IAAD,CAAD,CALP;AAAA;AAAA,QAKVK,KALU;;AAAA,qBAMkBL,QAAQ,CAAC,CAAC,MAAD,CAAD,CAN1B;AAAA;AAAA,QAMVM,QANU;AAAA,QAMAC,cANA;;AAQjB,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAG,MAAM;AACrB,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,OAAO,CAACe,MAAnC,CAAV;;AAEA,UAAIC,MAAM,CAACJ,IAAI,CAACE,MAAL,EAAD,CAAN,GAAwB,IAA5B,EAAkC;AAC9BT,QAAAA,SAAS,CAACL,OAAO,CAACW,CAAD,CAAR,CAAT;AAEH,OAHD,MAIK;AACDR,QAAAA,SAAS,CAACJ,OAAO,CAACY,CAAD,CAAR,CAAT;AACH;AAEJ,KAXD;;AAYAD,IAAAA,UAAU;AACVF,IAAAA,cAAc,CAAC,CAACF,KAAK,GAAGJ,MAAR,GAAiBE,MAAlB,CAAD,CAAd;AACH,GAfD;;AAiBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGa,CAAD,IAAOR,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEZ,QAAf;AAAyB,IAAA,UAAU,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAhCD;;AAkCA,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport Chess from 'react-chess';\n\nconst Bishop = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    const [letter, setLetter] = useState(['b']);\n    const [number, setNumber] = useState(1);\n    const [piece] = useState(['B@']);\n    const [position, handlePosition] = useState(['B@a1']);\n\n    const makeBishopMove = () => {\n        const randomMove = () => {\n            const n = Math.floor(Math.random() * numbers.length);\n\n            if (Number(Math.random()) > 0.49) {\n                setNumber(numbers[n]);\n\n            }\n            else {\n                setLetter(letters[n]);\n            }\n\n        }\n        randomMove();\n        handlePosition([piece + letter + number]);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeBishopMove(e.target.value)} > Move </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Bishop;\n\n"]},"metadata":{},"sourceType":"module"}