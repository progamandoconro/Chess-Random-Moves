{"ast":null,"code":"var _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\nimport ReadPGN from './ReadPGN';\nimport Board from './Board';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n} //Chess set\n\n\nconst chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n'];\nconst letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8']; //Set Board and Coordenates\n\nconst randomNumbers = () => getRandomInt(numbers.length);\n\nconst randomLetters = () => getRandomInt(letters.length);\n\nconst setBoard = [];\n\nconst randomCoordenates = () => {\n  const s = [];\n\n  for (let i = 0; i < 20; i++) {\n    s.push(letters[randomLetters()] + numbers[randomNumbers()]);\n  }\n\n  const coo = [...new Set(s)];\n\n  for (let i = 0; i < chessPieces.length; i++) {\n    setBoard.push(chessPieces[i] + '@' + coo[i]);\n  }\n\n  const handleKings = () => {\n    const lW = letters[randomLetters()];\n    const nW = numbers[randomNumbers()];\n    const lB = letters[randomLetters()];\n    const nB = numbers[randomNumbers()]; //Avoid overlapping \n\n    while (coo.includes(lW + nW) === true || coo.includes(lB + nB) === true) {\n      const lW = letters[randomLetters()];\n      const nW = numbers[randomNumbers()];\n      const lB = letters[randomLetters()];\n      const nB = numbers[randomNumbers()];\n      if (coo.includes(lW + nW) === true || coo.includes(lB + nB) === true) break;\n      const randomKings = ['K' + '@' + lW + nW, 'k' + '@' + lB + nB];\n      setBoard.push(randomKings[0], randomKings[1]);\n    }\n\n    const randomKings = ['K' + '@' + lW + nW, 'k' + '@' + lB + nB];\n    setBoard.push(randomKings[0], randomKings[1]);\n  };\n\n  handleKings();\n\n  const handlePawns = () => {\n    const pawns = [];\n\n    for (let i = 0; i < setBoard.length; i++) {\n      const t = setBoard[i];\n      pawns.push(t.slice(2));\n    }\n\n    console.log(pawns);\n  }; //handlePawns()\n\n\n  return setBoard;\n};\n\nfunction App() {\n  randomCoordenates();\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: setBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(ReadPGN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Board, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","Chess","ReadPGN","Board","getRandomInt","max","Math","floor","random","chessPieces","letters","numbers","randomNumbers","length","randomLetters","setBoard","randomCoordenates","s","i","push","coo","Set","handleKings","lW","nW","lB","nB","includes","randomKings","handlePawns","pawns","t","slice","console","log","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\nimport ReadPGN from './ReadPGN'\nimport Board from './Board'\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n//Chess set\nconst chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n'];\nconst letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n//Set Board and Coordenates\nconst randomNumbers = () => getRandomInt(numbers.length);\nconst randomLetters = () => getRandomInt(letters.length);\nconst setBoard = [];\nconst randomCoordenates = () => {\n  const s = [];\n  for (let i = 0; i < 20; i++) {\n    s.push(letters[randomLetters()] + numbers[randomNumbers()])\n\n  }\n  const coo = [...new Set(s)];\n\n  for (let i = 0; i < chessPieces.length; i++) {\n    setBoard.push(chessPieces[i] + '@' + coo[i])\n\n  }\n\n  const handleKings = () => {\n    const lW = letters[randomLetters()];\n    const nW = numbers[randomNumbers()];\n    const lB = letters[randomLetters()];\n    const nB = numbers[randomNumbers()];\n\n    //Avoid overlapping \n    while (coo.includes(lW + nW) === true || coo.includes(lB + nB) === true) {\n      const lW = letters[randomLetters()];\n      const nW = numbers[randomNumbers()];\n      const lB = letters[randomLetters()];\n      const nB = numbers[randomNumbers()];\n\n      if (coo.includes(lW + nW) === true || coo.includes(lB + nB) === true) break;\n\n      const randomKings = ['K' + '@' + lW + nW, 'k' + '@' + lB + nB];\n      setBoard.push(randomKings[0], randomKings[1]);\n\n    }\n    const randomKings = ['K' + '@' + lW + nW, 'k' + '@' + lB + nB];\n    setBoard.push(randomKings[0], randomKings[1])\n  }\n  handleKings()\n\n  const handlePawns = () => {\n    const pawns = [];\n\n    for (let i = 0; i < setBoard.length; i++) {\n      const t = setBoard[i]\n      pawns.push(t.slice(2))\n\n    }\n    console.log(pawns)\n\n  }\n\n\n  //handlePawns()\n  return setBoard;\n}\n\n\nfunction App() {\n\n  randomCoordenates()\n\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={setBoard} />\n      <br />\n      <ReadPGN />\n      <Board />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}