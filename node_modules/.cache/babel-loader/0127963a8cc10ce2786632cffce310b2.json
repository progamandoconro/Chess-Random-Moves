{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/King.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst King = () => {\n  const _useState = useState(['b']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState(Number(1)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['K@']),\n        _useState6 = _slicedToArray(_useState5, 1),\n        piece = _useState6[0];\n\n  const _useState7 = useState(Number(1)),\n        _useState8 = _slicedToArray(_useState7, 2),\n        index = _useState8[0],\n        setIndex = _useState8[1];\n\n  const _useState9 = useState(['K@a1']),\n        _useState10 = _slicedToArray(_useState9, 2),\n        position = _useState10[0],\n        handlePosition = _useState10[1];\n\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  const makeKingMove = async () => {\n    const randomMove = () => {\n      if (Number(Math.random()) > 0.49) {\n        setNumber(Number(number) + 1);\n      } else {\n        if (Number(Math.random()) > 0.49) {\n          setIndex(index + 1);\n        } else {\n          setIndex(index - 1);\n        }\n\n        setNumber(Number(number) - 1);\n      }\n\n      if (Number(number) >= 8) {\n        setNumber(Number(number) - 1);\n      }\n\n      if (Number(number <= 1)) {\n        setNumber(Number(number) + 1);\n      }\n\n      if (Number(index) >= 7) {\n        setIndex(Number(index) - 1);\n      }\n\n      if (Number(index) <= 0) {\n        setIndex(Number(index) + 1);\n      }\n\n      setLetter(letters[Number(index)]);\n      handlePosition([piece + letter + number]);\n      console.log(position);\n    };\n\n    for (let i = 0; i < 10; i++) {\n      await sleep(3000);\n      randomMove();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeKingMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};\n\nexport default King;","map":{"version":3,"sources":["/home/sony/chessro2/src/King.js"],"names":["React","useState","Chess","King","letter","setLetter","Number","number","setNumber","piece","index","setIndex","position","handlePosition","letters","sleep","ms","Promise","resolve","setTimeout","makeKingMove","randomMove","Math","random","console","log","i","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst King = () => {\n\n    const [letter, setLetter] = useState(['b']);\n    const [number, setNumber] = useState(Number(1));\n    const [piece] = useState(['K@']);\n    const [index, setIndex] = useState(Number(1))\n    const [position, handlePosition] = useState(['K@a1']);\n\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    const makeKingMove = async () => {\n\n        const randomMove = () => {\n\n\n            if (Number(Math.random()) > 0.49) {\n                setNumber(Number(number) + 1)\n            }\n            else {\n                if (Number(Math.random()) > 0.49) {\n                    setIndex(index + 1)\n                }\n                else {\n                    setIndex(index - 1)\n                }\n                setNumber(Number(number) - 1)\n            }\n            if (Number(number) >= 8) {\n                setNumber(Number(number) - 1)\n            }\n            if (Number(number <= 1)) {\n                setNumber(Number(number) + 1)\n            }\n            if (Number(index) >= 7) {\n                setIndex(Number(index) - 1)\n            }\n            if (Number(index) <= 0) {\n                setIndex(Number(index) + 1)\n            }\n\n\n            setLetter(letters[Number(index)])\n            handlePosition([piece + letter + number]);\n            console.log(position);\n        }\n\n        for (let i = 0; i < 10; i++) {\n            await sleep(3000);\n            randomMove();\n        }\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeKingMove(e.target.value)} > Move </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default King;"]},"metadata":{},"sourceType":"module"}