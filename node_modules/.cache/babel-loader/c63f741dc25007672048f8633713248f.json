{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\n\nfunction App() {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  } //Chess set\n\n\n  const chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n'];\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8']; //Set Board and Coordenates\n\n  const randomNumbers = () => getRandomInt(numbers.length);\n\n  const randomLetters = () => getRandomInt(letters.length);\n\n  const setBoard = [];\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        wKing = _useState2[0],\n        handlewKing = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bKing = _useState4[0],\n        handlebKing = _useState4[1];\n\n  const randomCoordenates = () => {\n    const s = [];\n\n    for (let i = 0; i < 20; i++) {\n      s.push(letters[randomLetters()] + numbers[randomNumbers()]);\n    }\n\n    const coo = [...new Set(s)];\n\n    for (let i = 0; i < chessPieces.length; i++) {\n      setBoard.push(chessPieces[i] + '@' + coo[i]);\n    }\n\n    const handleKings = () => {\n      const lW = letters[randomLetters()];\n      const nW = numbers[randomNumbers()];\n      const lB = letters[randomLetters()];\n      const nB = numbers[randomNumbers()];\n\n      if (coo.includes(lW + nW) == true && coo.includes(lB + nB) == true) {\n        console.log(coo);\n      } else {\n        const randomKings = ['K' + '@' + lW + nW, 'k' + '@' + lB + nB];\n        setBoard.push(randomKings[0], randomKings[1]);\n      }\n    };\n\n    handleKings();\n    return setBoard;\n  }; //Handle Pawns and Kings\n\n\n  const handlePawns = () => {};\n\n  randomCoordenates();\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: setBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","useState","Chess","App","getRandomInt","max","Math","floor","random","chessPieces","letters","numbers","randomNumbers","length","randomLetters","setBoard","wKing","handlewKing","bKing","handlebKing","randomCoordenates","s","i","push","coo","Set","handleKings","lW","nW","lB","nB","includes","console","log","randomKings","handlePawns"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\n\n\n\n\n\n\n\n\nfunction App() {\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  //Chess set\n  const chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n', 'R', 'B', 'N', 'r', 'b', 'n'];\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  //Set Board and Coordenates\n  const randomNumbers = () => getRandomInt(numbers.length);\n  const randomLetters = () => getRandomInt(letters.length);\n  const setBoard = [];\n\n  const [wKing, handlewKing] = useState('')\n  const [bKing, handlebKing] = useState('')\n\n\n  const randomCoordenates = () => {\n    const s = [];\n    for (let i = 0; i < 20; i++) {\n      s.push(letters[randomLetters()] + numbers[randomNumbers()])\n\n    }\n    const coo = [...new Set(s)];\n\n    for (let i = 0; i < chessPieces.length; i++) {\n      setBoard.push(chessPieces[i] + '@' + coo[i])\n\n    }\n\n\n    const handleKings = () => {\n\n      const lW = letters[randomLetters()];\n      const nW = numbers[randomNumbers()];\n      const lB = letters[randomLetters()];\n      const nB = numbers[randomNumbers()];\n\n      if (coo.includes(lW + nW) == true && coo.includes(lB + nB) == true) {\n\n\n\n        console.log(coo)\n      }\n      else {\n        const randomKings = ['K' + '@' +\n          lW + nW, 'k' + '@' +\n          lB + nB];\n        setBoard.push(randomKings[0], randomKings[1])\n      }\n    }\n    handleKings()\n\n    return setBoard;\n  }\n  //Handle Pawns and Kings\n  const handlePawns = () => {\n\n\n  }\n\n  randomCoordenates()\n\n\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={setBoard} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}