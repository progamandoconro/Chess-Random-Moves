{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Moves.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Moves = () => {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const _useState = useState(['a']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState([2]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['P@']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        piece = _useState6[0],\n        setPiece = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const makeRandomMove = e => {\n    if (Number(number) === 3) {\n      setNumber(4);\n    } else setNumber(Number(number) + 1);\n\n    if (Number(number) >= 7) {\n      setPiece('Q@');\n\n      if (Number(number) >= 8) {\n        setPiece('P@');\n        setNumber(2);\n      }\n    }\n\n    console.log(number);\n    handlePosition([piece + letter + number + e]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeRandomMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nexport default Moves;","map":{"version":3,"sources":["/home/sony/chessro2/src/Moves.js"],"names":["React","useState","Chess","Moves","getRandomInt","max","Math","floor","random","letter","setLetter","number","setNumber","piece","setPiece","position","handlePosition","makeRandomMove","e","Number","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACH;;AAJe,oBAMYJ,QAAQ,CAAC,CAAC,GAAD,CAAD,CANpB;AAAA;AAAA,QAMTQ,MANS;AAAA,QAMDC,SANC;;AAAA,qBAOYT,QAAQ,CAAC,CAAC,CAAD,CAAD,CAPpB;AAAA;AAAA,QAOTU,MAPS;AAAA,QAODC,SAPC;;AAAA,qBAQUX,QAAQ,CAAC,CAAC,IAAD,CAAD,CARlB;AAAA;AAAA,QAQTY,KARS;AAAA,QAQFC,QARE;;AAAA,qBAUmBb,QAAQ,CAAC,EAAD,CAV3B;AAAA;AAAA,QAUTc,QAVS;AAAA,QAUCC,cAVD;;AAYhB,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAG1B,QAAIC,MAAM,CAACR,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtBC,MAAAA,SAAS,CAAC,CAAD,CAAT;AAEH,KAHD,MAIKA,SAAS,CAACO,MAAM,CAACR,MAAD,CAAN,GAAiB,CAAlB,CAAT;;AAGL,QAAIQ,MAAM,CAACR,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AACrBG,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,UAAIK,MAAM,CAACR,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AACrBG,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,QAAAA,SAAS,CAAC,CAAD,CAAT;AACH;AAEJ;;AAQDQ,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACAK,IAAAA,cAAc,CAAC,CAACH,KAAK,GAAGJ,MAAR,GAAiBE,MAAjB,GAA0BO,CAA3B,CAAD,CAAd;AAGH,GA9BD;;AAgCA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGA,CAAD,IAAOD,cAAc,CAACC,CAAC,CAACI,MAAF,CAASC,KAAV,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAER,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAnDD;;AAqDA,eAAeZ,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Chess from 'react-chess'\n\nconst Moves = () => {\n\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n    const [letter, setLetter] = useState(['a']);\n    const [number, setNumber] = useState([2])\n    const [piece, setPiece] = useState(['P@'])\n\n    const [position, handlePosition] = useState([]);\n\n    const makeRandomMove = (e) => {\n\n\n        if (Number(number) === 3) {\n            setNumber(4);\n\n        }\n        else setNumber(Number(number) + 1);\n\n\n        if (Number(number) >= 7) {\n            setPiece('Q@');\n\n            if (Number(number) >= 8) {\n                setPiece('P@');\n                setNumber(2)\n            }\n\n        }\n\n\n\n\n\n\n\n        console.log(number)\n        handlePosition([piece + letter + number + e])\n\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeRandomMove(e.target.value)} > Move </button>\n            <Chess pieces={position} />\n\n        </div>\n    )\n}\n\nexport default Moves;"]},"metadata":{},"sourceType":"module"}