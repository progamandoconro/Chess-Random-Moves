{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar Draggable = require('react-draggable');\n\nvar resizeAware = require('react-resize-aware');\n\nvar defaultLineup = require('./defaultLineup');\n\nvar pieceComponents = require('./pieces');\n\nvar decode = require('./decode');\n\nvar ResizeAware = resizeAware.default || resizeAware;\n\nvar getDefaultLineup = function getDefaultLineup() {\n  return defaultLineup.slice();\n};\n\nvar noop = function noop() {\n  /* intentional noop */\n};\n\nvar square = 100 / 8;\nvar squareSize = square + '%';\nvar squareStyles = {\n  width: squareSize,\n  paddingBottom: squareSize,\n  float: 'left',\n  position: 'relative',\n  pointerEvents: 'none'\n};\nvar labelStyles = {\n  fontSize: 'calc(7px + .5vw)',\n  position: 'absolute',\n  userSelect: 'none'\n};\nvar yLabelStyles = Object.assign({\n  top: '5%',\n  left: '5%'\n}, labelStyles);\nvar xLabelStyles = Object.assign({\n  bottom: '5%',\n  right: '5%'\n}, labelStyles);\n\nvar Chess = function (_React$Component) {\n  _inherits(Chess, _React$Component);\n\n  function Chess() {\n    var _ref;\n\n    _classCallCheck(this, Chess);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Chess.__proto__ || Object.getPrototypeOf(Chess)).call.apply(_ref, [this].concat(args)));\n\n    _this.els = {};\n    _this.state = {};\n\n    _this.setBoardRef = function (el) {\n      return _this.els.board = el;\n    };\n\n    _this.handleDragStart = _this.handleDragStart.bind(_this);\n    _this.handleDragStop = _this.handleDragStop.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(Chess, [{\n    key: 'getSquareColor',\n    value: function getSquareColor(x, y) {\n      var _props = this.props,\n          lightSquareColor = _props.lightSquareColor,\n          darkSquareColor = _props.darkSquareColor;\n      var odd = x % 2;\n\n      if (y % 2) {\n        return odd ? lightSquareColor : darkSquareColor;\n      }\n\n      return odd ? darkSquareColor : lightSquareColor;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var boardSize = this.els.board.clientWidth;\n      var tileSize = boardSize / 8;\n      this.setState({\n        boardSize: boardSize,\n        tileSize: tileSize\n      });\n    }\n  }, {\n    key: 'handleResize',\n    value: function handleResize(size) {\n      var tileSize = size.width / 8;\n      this.setState({\n        boardSize: size.width,\n        tileSize: tileSize\n      });\n    }\n  }, {\n    key: 'coordsToPosition',\n    value: function coordsToPosition(coords) {\n      var x = Math.round(coords.x / this.state.tileSize);\n      var y = Math.round(coords.y / this.state.tileSize);\n      return {\n        x: x,\n        y: y,\n        pos: '' + String.fromCharCode(decode.charCodeOffset + x) + (8 - y)\n      };\n    }\n  }, {\n    key: 'handleDrag',\n    value: function handleDrag(evt, drag) {\n      if (!this.props.highlightTarget) {\n        return;\n      }\n\n      var targetTile = this.state.targetTile;\n\n      var _coordsToPosition = this.coordsToPosition({\n        x: drag.node.offsetLeft + drag.x,\n        y: drag.node.offsetTop + drag.y\n      }),\n          x = _coordsToPosition.x,\n          y = _coordsToPosition.y;\n\n      if (!targetTile || targetTile.x !== x || targetTile.y !== y) {\n        this.setState({\n          targetTile: {\n            x: x,\n            y: y\n          }\n        });\n      }\n    }\n  }, {\n    key: 'handleDragStart',\n    value: function handleDragStart(evt, drag) {\n      evt.preventDefault();\n\n      if (!this.props.allowMoves) {\n        return false;\n      }\n\n      var node = drag.node;\n      var dragFrom = this.coordsToPosition({\n        x: node.offsetLeft,\n        y: node.offsetTop\n      });\n      var draggingPiece = this.findPieceAtPosition(dragFrom.pos);\n\n      if (this.props.onDragStart(draggingPiece, dragFrom.pos) === false) {\n        return false;\n      }\n\n      this.setState({\n        dragFrom: dragFrom,\n        draggingPiece: draggingPiece\n      });\n      return evt;\n    }\n  }, {\n    key: 'handleDragStop',\n    value: function handleDragStop(evt, drag) {\n      var node = drag.node;\n      var _state = this.state,\n          dragFrom = _state.dragFrom,\n          draggingPiece = _state.draggingPiece;\n      var dragTo = this.coordsToPosition({\n        x: node.offsetLeft + drag.x,\n        y: node.offsetTop + drag.y\n      });\n      this.setState({\n        dragFrom: null,\n        targetTile: null,\n        draggingPiece: null\n      });\n\n      if (dragFrom.pos !== dragTo.pos) {\n        this.props.onMovePiece(draggingPiece, dragFrom.pos, dragTo.pos);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'findPieceAtPosition',\n    value: function findPieceAtPosition(pos) {\n      for (var i = 0; i < this.props.pieces.length; i++) {\n        var piece = this.props.pieces[i];\n\n        if (piece.indexOf(pos) === 2) {\n          return {\n            notation: piece,\n            name: piece.slice(0, 1),\n            index: i,\n            position: pos\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderLabelText',\n    value: function renderLabelText(x, y) {\n      var isLeftColumn = x === 0;\n      var isBottomRow = y === 7;\n\n      if (!this.props.drawLabels || !isLeftColumn && !isBottomRow) {\n        return null;\n      }\n\n      if (isLeftColumn && isBottomRow) {\n        return [React.createElement('span', {\n          key: 'blx',\n          style: xLabelStyles\n        }, 'a'), React.createElement('span', {\n          key: 'bly',\n          style: yLabelStyles\n        }, '1')];\n      }\n\n      var label = isLeftColumn ? 8 - y : String.fromCharCode(decode.charCodeOffset + x);\n      return React.createElement('span', {\n        style: isLeftColumn ? yLabelStyles : xLabelStyles\n      }, label);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _state2 = this.state,\n          targetTile = _state2.targetTile,\n          draggingPiece = _state2.draggingPiece,\n          boardSize = _state2.boardSize;\n      var tiles = [];\n\n      for (var y = 0; y < 8; y++) {\n        for (var x = 0; x < 8; x++) {\n          var isTarget = targetTile && targetTile.x === x && targetTile.y === y;\n          var background = this.getSquareColor(x, y);\n          var boxShadow = isTarget ? 'inset 0px 0px 0px 0.4vmin yellow' : undefined;\n          var styles = Object.assign({\n            background: background,\n            boxShadow: boxShadow\n          }, squareStyles);\n          tiles.push(React.createElement('div', {\n            key: 'rect-' + x + '-' + y,\n            style: styles\n          }, this.renderLabelText(x, y)));\n        }\n      }\n\n      var pieces = this.props.pieces.map(function (decl, i) {\n        var isMoving = draggingPiece && i === draggingPiece.index;\n\n        var _decode$fromPieceDecl = decode.fromPieceDecl(decl),\n            x = _decode$fromPieceDecl.x,\n            y = _decode$fromPieceDecl.y,\n            piece = _decode$fromPieceDecl.piece;\n\n        var Piece = pieceComponents[piece];\n        return React.createElement(Draggable, {\n          bounds: 'parent',\n          position: {\n            x: 0,\n            y: 0\n          },\n          onStart: _this2.handleDragStart,\n          onDrag: _this2.handleDrag,\n          onStop: _this2.handleDragStop,\n          key: piece + '-' + x + '-' + y\n        }, React.createElement(Piece, {\n          isMoving: isMoving,\n          x: x,\n          y: y\n        }));\n      });\n      var children = tiles.concat(pieces);\n      var boardStyles = {\n        position: 'relative',\n        overflow: 'hidden',\n        width: '100%',\n        height: boardSize\n      };\n      return React.createElement(ResizeAware, {\n        ref: this.setBoardRef,\n        onlyEvent: true,\n        onResize: this.handleResize,\n        style: boardStyles\n      }, children);\n    }\n  }]);\n\n  return Chess;\n}(React.Component);\n\nChess.propTypes = {\n  allowMoves: PropTypes.bool,\n  highlightTarget: PropTypes.bool,\n  drawLabels: PropTypes.bool,\n  lightSquareColor: PropTypes.string,\n  darkSquareColor: PropTypes.string,\n  onMovePiece: PropTypes.func,\n  onDragStart: PropTypes.func,\n  pieces: PropTypes.arrayOf(PropTypes.string)\n};\nChess.defaultProps = {\n  allowMoves: true,\n  highlightTarget: true,\n  drawLabels: true,\n  onMovePiece: noop,\n  onDragStart: noop,\n  lightSquareColor: '#f0d9b5',\n  darkSquareColor: '#b58863',\n  pieces: getDefaultLineup()\n};\nChess.getDefaultLineup = getDefaultLineup;\nmodule.exports = Chess;","map":{"version":3,"sources":["/home/sony/chessro2/node_modules/react-chess/lib/react-chess.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","React","require","PropTypes","Draggable","resizeAware","defaultLineup","pieceComponents","decode","ResizeAware","default","getDefaultLineup","slice","noop","square","squareSize","squareStyles","width","paddingBottom","float","position","pointerEvents","labelStyles","fontSize","userSelect","yLabelStyles","assign","top","left","xLabelStyles","bottom","right","Chess","_React$Component","_ref","_len","arguments","args","Array","_key","_this","getPrototypeOf","apply","concat","els","state","setBoardRef","el","board","handleDragStart","bind","handleDragStop","handleDrag","handleResize","getSquareColor","x","y","_props","lightSquareColor","darkSquareColor","odd","componentDidMount","boardSize","clientWidth","tileSize","setState","size","coordsToPosition","coords","Math","round","pos","String","fromCharCode","charCodeOffset","evt","drag","highlightTarget","targetTile","_coordsToPosition","node","offsetLeft","offsetTop","preventDefault","allowMoves","dragFrom","draggingPiece","findPieceAtPosition","onDragStart","_state","dragTo","onMovePiece","pieces","piece","indexOf","notation","name","index","renderLabelText","isLeftColumn","isBottomRow","drawLabels","createElement","style","label","render","_this2","_state2","tiles","isTarget","background","boxShadow","undefined","styles","push","map","decl","isMoving","_decode$fromPieceDecl","fromPieceDecl","Piece","bounds","onStart","onDrag","onStop","children","boardStyles","overflow","height","ref","onlyEvent","onResize","Component","propTypes","bool","string","func","arrayOf","defaultProps","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar Draggable = require('react-draggable');\nvar resizeAware = require('react-resize-aware');\nvar defaultLineup = require('./defaultLineup');\nvar pieceComponents = require('./pieces');\nvar decode = require('./decode');\n\nvar ResizeAware = resizeAware.default || resizeAware;\nvar getDefaultLineup = function getDefaultLineup() {\n  return defaultLineup.slice();\n};\nvar noop = function noop() {\n  /* intentional noop */\n};\n\nvar square = 100 / 8;\nvar squareSize = square + '%';\n\nvar squareStyles = {\n  width: squareSize,\n  paddingBottom: squareSize,\n  float: 'left',\n  position: 'relative',\n  pointerEvents: 'none'\n};\n\nvar labelStyles = { fontSize: 'calc(7px + .5vw)', position: 'absolute', userSelect: 'none' };\nvar yLabelStyles = Object.assign({ top: '5%', left: '5%' }, labelStyles);\nvar xLabelStyles = Object.assign({ bottom: '5%', right: '5%' }, labelStyles);\n\nvar Chess = function (_React$Component) {\n  _inherits(Chess, _React$Component);\n\n  function Chess() {\n    var _ref;\n\n    _classCallCheck(this, Chess);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = Chess.__proto__ || Object.getPrototypeOf(Chess)).call.apply(_ref, [this].concat(args)));\n\n    _this.els = {};\n    _this.state = {};\n    _this.setBoardRef = function (el) {\n      return _this.els.board = el;\n    };\n    _this.handleDragStart = _this.handleDragStart.bind(_this);\n    _this.handleDragStop = _this.handleDragStop.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(Chess, [{\n    key: 'getSquareColor',\n    value: function getSquareColor(x, y) {\n      var _props = this.props,\n          lightSquareColor = _props.lightSquareColor,\n          darkSquareColor = _props.darkSquareColor;\n\n      var odd = x % 2;\n\n      if (y % 2) {\n        return odd ? lightSquareColor : darkSquareColor;\n      }\n\n      return odd ? darkSquareColor : lightSquareColor;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var boardSize = this.els.board.clientWidth;\n      var tileSize = boardSize / 8;\n      this.setState({ boardSize: boardSize, tileSize: tileSize });\n    }\n  }, {\n    key: 'handleResize',\n    value: function handleResize(size) {\n      var tileSize = size.width / 8;\n      this.setState({ boardSize: size.width, tileSize: tileSize });\n    }\n  }, {\n    key: 'coordsToPosition',\n    value: function coordsToPosition(coords) {\n      var x = Math.round(coords.x / this.state.tileSize);\n      var y = Math.round(coords.y / this.state.tileSize);\n      return {\n        x: x,\n        y: y,\n        pos: '' + String.fromCharCode(decode.charCodeOffset + x) + (8 - y)\n      };\n    }\n  }, {\n    key: 'handleDrag',\n    value: function handleDrag(evt, drag) {\n      if (!this.props.highlightTarget) {\n        return;\n      }\n\n      var targetTile = this.state.targetTile;\n\n      var _coordsToPosition = this.coordsToPosition({\n        x: drag.node.offsetLeft + drag.x,\n        y: drag.node.offsetTop + drag.y\n      }),\n          x = _coordsToPosition.x,\n          y = _coordsToPosition.y;\n\n      if (!targetTile || targetTile.x !== x || targetTile.y !== y) {\n        this.setState({ targetTile: { x: x, y: y } });\n      }\n    }\n  }, {\n    key: 'handleDragStart',\n    value: function handleDragStart(evt, drag) {\n      evt.preventDefault();\n\n      if (!this.props.allowMoves) {\n        return false;\n      }\n\n      var node = drag.node;\n      var dragFrom = this.coordsToPosition({ x: node.offsetLeft, y: node.offsetTop });\n      var draggingPiece = this.findPieceAtPosition(dragFrom.pos);\n      if (this.props.onDragStart(draggingPiece, dragFrom.pos) === false) {\n        return false;\n      }\n\n      this.setState({ dragFrom: dragFrom, draggingPiece: draggingPiece });\n      return evt;\n    }\n  }, {\n    key: 'handleDragStop',\n    value: function handleDragStop(evt, drag) {\n      var node = drag.node;\n      var _state = this.state,\n          dragFrom = _state.dragFrom,\n          draggingPiece = _state.draggingPiece;\n\n      var dragTo = this.coordsToPosition({ x: node.offsetLeft + drag.x, y: node.offsetTop + drag.y });\n\n      this.setState({ dragFrom: null, targetTile: null, draggingPiece: null });\n\n      if (dragFrom.pos !== dragTo.pos) {\n        this.props.onMovePiece(draggingPiece, dragFrom.pos, dragTo.pos);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'findPieceAtPosition',\n    value: function findPieceAtPosition(pos) {\n      for (var i = 0; i < this.props.pieces.length; i++) {\n        var piece = this.props.pieces[i];\n        if (piece.indexOf(pos) === 2) {\n          return { notation: piece, name: piece.slice(0, 1), index: i, position: pos };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderLabelText',\n    value: function renderLabelText(x, y) {\n      var isLeftColumn = x === 0;\n      var isBottomRow = y === 7;\n\n      if (!this.props.drawLabels || !isLeftColumn && !isBottomRow) {\n        return null;\n      }\n\n      if (isLeftColumn && isBottomRow) {\n        return [React.createElement(\n          'span',\n          { key: 'blx', style: xLabelStyles },\n          'a'\n        ), React.createElement(\n          'span',\n          { key: 'bly', style: yLabelStyles },\n          '1'\n        )];\n      }\n\n      var label = isLeftColumn ? 8 - y : String.fromCharCode(decode.charCodeOffset + x);\n      return React.createElement(\n        'span',\n        { style: isLeftColumn ? yLabelStyles : xLabelStyles },\n        label\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _state2 = this.state,\n          targetTile = _state2.targetTile,\n          draggingPiece = _state2.draggingPiece,\n          boardSize = _state2.boardSize;\n\n\n      var tiles = [];\n      for (var y = 0; y < 8; y++) {\n        for (var x = 0; x < 8; x++) {\n          var isTarget = targetTile && targetTile.x === x && targetTile.y === y;\n          var background = this.getSquareColor(x, y);\n          var boxShadow = isTarget ? 'inset 0px 0px 0px 0.4vmin yellow' : undefined;\n          var styles = Object.assign({ background: background, boxShadow: boxShadow }, squareStyles);\n\n          tiles.push(React.createElement(\n            'div',\n            { key: 'rect-' + x + '-' + y, style: styles },\n            this.renderLabelText(x, y)\n          ));\n        }\n      }\n\n      var pieces = this.props.pieces.map(function (decl, i) {\n        var isMoving = draggingPiece && i === draggingPiece.index;\n\n        var _decode$fromPieceDecl = decode.fromPieceDecl(decl),\n            x = _decode$fromPieceDecl.x,\n            y = _decode$fromPieceDecl.y,\n            piece = _decode$fromPieceDecl.piece;\n\n        var Piece = pieceComponents[piece];\n        return React.createElement(\n          Draggable,\n          {\n            bounds: 'parent',\n            position: { x: 0, y: 0 },\n            onStart: _this2.handleDragStart,\n            onDrag: _this2.handleDrag,\n            onStop: _this2.handleDragStop,\n            key: piece + '-' + x + '-' + y },\n          React.createElement(Piece, { isMoving: isMoving, x: x, y: y })\n        );\n      });\n\n      var children = tiles.concat(pieces);\n      var boardStyles = { position: 'relative', overflow: 'hidden', width: '100%', height: boardSize };\n\n      return React.createElement(\n        ResizeAware,\n        {\n          ref: this.setBoardRef,\n          onlyEvent: true,\n          onResize: this.handleResize,\n          style: boardStyles },\n        children\n      );\n    }\n  }]);\n\n  return Chess;\n}(React.Component);\n\nChess.propTypes = {\n  allowMoves: PropTypes.bool,\n  highlightTarget: PropTypes.bool,\n  drawLabels: PropTypes.bool,\n  lightSquareColor: PropTypes.string,\n  darkSquareColor: PropTypes.string,\n  onMovePiece: PropTypes.func,\n  onDragStart: PropTypes.func,\n  pieces: PropTypes.arrayOf(PropTypes.string)\n};\n\nChess.defaultProps = {\n  allowMoves: true,\n  highlightTarget: true,\n  drawLabels: true,\n  onMovePiece: noop,\n  onDragStart: noop,\n  lightSquareColor: '#f0d9b5',\n  darkSquareColor: '#b58863',\n  pieces: getDefaultLineup()\n};\n\nChess.getDefaultLineup = getDefaultLineup;\n\nmodule.exports = Chess;"]},"metadata":{},"sourceType":"script"}