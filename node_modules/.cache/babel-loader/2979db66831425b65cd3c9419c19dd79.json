{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Board.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport myRandomPositions from './RandomPositions';\n\nconst Board = () => {\n  const _useState = useState(myRandomMoves()),\n        _useState2 = _slicedToArray(_useState, 2),\n        position = _useState2[0],\n        handlePosition = _useState2[1];\n\n  const makeRandomPosition = () => {\n    handlePosition(myRandomMoves());\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => makeRandomPosition(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Random\"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nexport default Board;","map":{"version":3,"sources":["/home/sony/chessro2/src/Board.js"],"names":["React","useState","Chess","myRandomPositions","Board","myRandomMoves","position","handlePosition","makeRandomPosition"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,mBAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBAEmBH,QAAQ,CAACI,aAAa,EAAd,CAF3B;AAAA;AAAA,QAETC,QAFS;AAAA,QAECC,cAFD;;AAIhB,QAAMC,kBAAkB,GAAG,MAAM;AAE7BD,IAAAA,cAAc,CAACF,aAAa,EAAd,CAAd;AAGH,GALD;;AAOA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,OAAO,EAAE,MAAMG,kBAAkB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEF,QADZ;AAGI,IAAA,UAAU,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAFJ;AAgBH,CA3BD;;AA6BA,eAAeF,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Chess from 'react-chess'\nimport myRandomPositions from './RandomPositions'\n\nconst Board = () => {\n\n    const [position, handlePosition] = useState(myRandomMoves());\n\n    const makeRandomPosition = () => {\n\n        handlePosition(myRandomMoves());\n\n\n    }\n\n    return (\n\n        <div >\n\n            <button onClick={() => makeRandomPosition()} >\n                Random\n            </button>\n\n            <Chess\n                pieces={position}\n\n                allowMoves={false} />\n        </div>\n    )\n\n\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}