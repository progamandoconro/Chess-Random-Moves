{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/King.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst King = () => {\n  const _useState = useState(['e']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState([5]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['K@']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        piece = _useState6[0],\n        setPiece = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const makeKingMove = e => {\n    const randomMove = () => {\n      if (Number(number) >= 7) {\n        setNumber(Number(number) - 1);\n      }\n\n      if (Number(number) < 2) {\n        setNumber(Number(number) + 1);\n      }\n\n      if (Math.random() < Number(0.4999)) {\n        setNumber(Number(number) + 1);\n      } else {\n        setNumber(Number(number) - 1);\n      }\n    };\n\n    randomMove();\n    handlePosition([piece + letter + number]);\n    console.log(position);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeKingMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default King;","map":{"version":3,"sources":["/home/sony/chessro2/src/King.js"],"names":["React","useState","Chess","King","letter","setLetter","number","setNumber","piece","setPiece","position","handlePosition","makeKingMove","e","randomMove","Number","Math","random","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAEaF,QAAQ,CAAC,CAAC,GAAD,CAAD,CAFrB;AAAA;AAAA,QAERG,MAFQ;AAAA,QAEAC,SAFA;;AAAA,qBAGaJ,QAAQ,CAAC,CAAC,CAAD,CAAD,CAHrB;AAAA;AAAA,QAGRK,MAHQ;AAAA,QAGAC,SAHA;;AAAA,qBAIWN,QAAQ,CAAC,CAAC,IAAD,CAAD,CAJnB;AAAA;AAAA,QAIRO,KAJQ;AAAA,QAIDC,QAJC;;AAAA,qBAMoBR,QAAQ,CAAC,EAAD,CAN5B;AAAA;AAAA,QAMRS,QANQ;AAAA,QAMEC,cANF;;AAQf,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAExB,UAAMC,UAAU,GAAG,MAAM;AAErB,UAAIC,MAAM,CAACT,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AAAEC,QAAAA,SAAS,CAACQ,MAAM,CAACT,MAAD,CAAN,GAAiB,CAAlB,CAAT;AAA+B;;AAC1D,UAAIS,MAAM,CAACT,MAAD,CAAN,GAAiB,CAArB,EAAwB;AAAEC,QAAAA,SAAS,CAACQ,MAAM,CAACT,MAAD,CAAN,GAAiB,CAAlB,CAAT;AAA+B;;AAGzD,UAAIU,IAAI,CAACC,MAAL,KAAgBF,MAAM,CAAC,MAAD,CAA1B,EAAoC;AAEhCR,QAAAA,SAAS,CAACQ,MAAM,CAACT,MAAD,CAAN,GAAiB,CAAlB,CAAT;AACH,OAHD,MAKK;AACDC,QAAAA,SAAS,CAACQ,MAAM,CAACT,MAAD,CAAN,GAAiB,CAAlB,CAAT;AACH;AACJ,KAdD;;AAeAQ,IAAAA,UAAU;AAEVH,IAAAA,cAAc,CAAC,CAACH,KAAK,GAAGJ,MAAR,GAAiBE,MAAlB,CAAD,CAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAEH,GAtBD;;AAwBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGG,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACO,MAAF,CAASC,KAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEX,QAAf;AAAyB,IAAA,UAAU,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAvCD;;AAyCA,eAAeP,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport Chess from 'react-chess'\n\nconst King = () => {\n\n    const [letter, setLetter] = useState(['e']);\n    const [number, setNumber] = useState([5]);\n    const [piece, setPiece] = useState(['K@']);\n\n    const [position, handlePosition] = useState([]);\n\n    const makeKingMove = (e) => {\n\n        const randomMove = () => {\n\n            if (Number(number) >= 7) { setNumber(Number(number) - 1) }\n            if (Number(number) < 2) { setNumber(Number(number) + 1) }\n\n\n            if (Math.random() < Number(0.4999)) {\n\n                setNumber(Number(number) + 1);\n            }\n\n            else {\n                setNumber(Number(number) - 1);\n            }\n        }\n        randomMove()\n\n        handlePosition([piece + letter + number]);\n        console.log(position);\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeKingMove(e.target.value)} > Move </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default King;"]},"metadata":{},"sourceType":"module"}