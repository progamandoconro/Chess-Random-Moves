{"ast":null,"code":"var _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\n\nfunction App() {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const chessPieces = ['R', 'P', 'Q', 'B', 'N', 'r', 'p', 'q', 'b', 'n'];\n  const squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  const randomChessPieces = () => getRandomInt(chessPieces.length);\n\n  const randomNumbers = () => getRandomInt(numbers.length);\n\n  const randomSquares = () => getRandomInt(squares.length);\n\n  const randomCoordenates = () => {\n    const s = [];\n\n    for (let i = 0; i < 100; i++) {\n      s.push(squares[randomSquares()] + numbers[randomNumbers()]);\n    }\n\n    const coo = [...new Set(s)];\n    const setBoard = [];\n\n    for (let i = 0; i < coo.length; i++) {\n      setBoard.push(chessPieces[randomChessPieces()] + '@' + coo[i]);\n    }\n\n    console.log(setBoard);\n    return setBoard;\n  };\n\n  randomCoordenates();\n  const randomKings = ['K' + '@' + squares[randomSquares()] + numbers[randomNumbers()], 'k' + '@' + squares[randomSquares()] + numbers[randomNumbers()]];\n  const board = [];\n\n  const randomBoard = () => {\n    for (let i = 1; i < 20; i++) {\n      const move = [chessPieces[randomChessPieces()] + '@' + squares[randomSquares()] + numbers[randomNumbers()]];\n      board.push(move[0]);\n    }\n\n    board.push(randomKings[0], randomKings[1]);\n  };\n\n  randomBoard();\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: board,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","Chess","App","getRandomInt","max","Math","floor","random","chessPieces","squares","numbers","randomChessPieces","length","randomNumbers","randomSquares","randomCoordenates","s","i","push","coo","Set","setBoard","console","log","randomKings","board","randomBoard","move"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,WAAP;;AAIA,SAASC,GAAT,GAAe;AACb,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,QAAMI,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAApB;AACA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AACA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;;AAEA,QAAMC,iBAAiB,GAAG,MAAMR,YAAY,CAACK,WAAW,CAACI,MAAb,CAA5C;;AACA,QAAMC,aAAa,GAAG,MAAMV,YAAY,CAACO,OAAO,CAACE,MAAT,CAAxC;;AACA,QAAME,aAAa,GAAG,MAAMX,YAAY,CAACM,OAAO,CAACG,MAAT,CAAxC;;AAEA,QAAMG,iBAAiB,GAAG,MAAM;AAE9B,UAAMC,CAAC,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,MAAAA,CAAC,CAACE,IAAF,CAAOT,OAAO,CAACK,aAAa,EAAd,CAAP,GAA2BJ,OAAO,CAACG,aAAa,EAAd,CAAzC;AAGD;;AAED,UAAMM,GAAG,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,CAAR,CAAJ,CAAZ;AAEA,UAAMK,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACP,MAAxB,EAAgCK,CAAC,EAAjC,EAAqC;AACnCI,MAAAA,QAAQ,CAACH,IAAT,CAAcV,WAAW,CAACG,iBAAiB,EAAlB,CAAX,GAAmC,GAAnC,GAAyCQ,GAAG,CAACF,CAAD,CAA1D;AAED;;AAEDK,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAP;AACD,GAnBD;;AAoBAN,EAAAA,iBAAiB;AAEjB,QAAMS,WAAW,GAAG,CAAC,MAAM,GAAN,GACnBf,OAAO,CAACK,aAAa,EAAd,CADY,GAEnBJ,OAAO,CAACG,aAAa,EAAd,CAFW,EAGpB,MAAM,GAAN,GACAJ,OAAO,CAACK,aAAa,EAAd,CADP,GAEAJ,OAAO,CAACG,aAAa,EAAd,CALa,CAApB;AAOA,QAAMY,KAAK,GAAG,EAAd;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,YAAMU,IAAI,GAAG,CAACnB,WAAW,CAACG,iBAAiB,EAAlB,CAAX,GAAmC,GAAnC,GAAyCF,OAAO,CAACK,aAAa,EAAd,CAAhD,GAAoEJ,OAAO,CAACG,aAAa,EAAd,CAA5E,CAAb;AACAY,MAAAA,KAAK,CAACP,IAAN,CAAWS,IAAI,CAAC,CAAD,CAAf;AAED;;AACDF,IAAAA,KAAK,CAACP,IAAN,CAAWM,WAAW,CAAC,CAAD,CAAtB,EAA2BA,WAAW,CAAC,CAAD,CAAtC;AACD,GAPD;;AASAE,EAAAA,WAAW;AAEX,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AAED,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\n\n\n\nfunction App() {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const chessPieces = ['R', 'P', 'Q', 'B', 'N', 'r', 'p', 'q', 'b', 'n'];\n  const squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  const randomChessPieces = () => getRandomInt(chessPieces.length);\n  const randomNumbers = () => getRandomInt(numbers.length);\n  const randomSquares = () => getRandomInt(squares.length);\n\n  const randomCoordenates = () => {\n\n    const s = [];\n    for (let i = 0; i < 100; i++) {\n      s.push(squares[randomSquares()] + numbers[randomNumbers()])\n\n\n    }\n\n    const coo = [...new Set(s)]\n\n    const setBoard = [];\n    for (let i = 0; i < coo.length; i++) {\n      setBoard.push(chessPieces[randomChessPieces()] + '@' + coo[i])\n\n    }\n\n    console.log(setBoard)\n    return setBoard;\n  }\n  randomCoordenates()\n\n  const randomKings = ['K' + '@' +\n    squares[randomSquares()] +\n    numbers[randomNumbers()],\n  'k' + '@' +\n  squares[randomSquares()] +\n  numbers[randomNumbers()]\n  ];\n  const board = [];\n\n  const randomBoard = () => {\n    for (let i = 1; i < 20; i++) {\n      const move = [chessPieces[randomChessPieces()] + '@' + squares[randomSquares()] + numbers[randomNumbers()]];\n      board.push(move[0])\n\n    }\n    board.push(randomKings[0], randomKings[1])\n  }\n\n  randomBoard()\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={board} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}