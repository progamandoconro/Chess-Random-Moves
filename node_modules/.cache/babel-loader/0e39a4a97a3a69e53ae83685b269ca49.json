{"ast":null,"code":"var _jsxFileName = \"/home/sony/chessro2/src/App.js\";\nimport React from 'react';\nimport Chess from 'react-chess';\nimport './App.css';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n'];\nconst squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\nconst randomChessPieces = () => getRandomInt(chessPieces.length);\n\nconst randomNumbers = () => getRandomInt(numbers.length);\n\nconst randomSquares = () => getRandomInt(squares.length);\n\nconst setBoard = [];\n\nconst randomCoordenates = () => {\n  const s = [];\n\n  for (let i = 0; i < 10; i++) {\n    s.push(squares[randomSquares()] + numbers[randomNumbers()]);\n  }\n\n  const coo = [...new Set(s)];\n\n  for (let i = 0; i < coo.length; i++) {\n    setBoard.push(chessPieces[1] + '@' + coo[i]);\n  }\n\n  console.log(setBoard, coo);\n  return setBoard;\n};\n\nconst handleKings = () => {\n  const randomKings = ['K' + '@' + squares[randomSquares()] + numbers[randomNumbers()], 'k' + '@' + squares[randomSquares()] + numbers[randomNumbers()]];\n  setBoard.push(randomKings[0], randomKings[1]);\n};\n\nconst handlePawns = () => {};\n\nfunction App() {\n  randomCoordenates(); //handleKings()\n\n  return React.createElement(\"div\", {\n    className: \"ChessBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Chess, {\n    pieces: setBoard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sony/chessro2/src/App.js"],"names":["React","Chess","getRandomInt","max","Math","floor","random","chessPieces","squares","numbers","randomChessPieces","length","randomNumbers","randomSquares","setBoard","randomCoordenates","s","i","push","coo","Set","console","log","handleKings","randomKings","handlePawns","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,MAAMI,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAApB;AACA,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;AACA,MAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAhB;;AAEA,MAAMC,iBAAiB,GAAG,MAAMR,YAAY,CAACK,WAAW,CAACI,MAAb,CAA5C;;AACA,MAAMC,aAAa,GAAG,MAAMV,YAAY,CAACO,OAAO,CAACE,MAAT,CAAxC;;AACA,MAAME,aAAa,GAAG,MAAMX,YAAY,CAACM,OAAO,CAACG,MAAT,CAAxC;;AACA,MAAMG,QAAQ,GAAG,EAAjB;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAE9B,QAAMC,CAAC,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,IAAAA,CAAC,CAACE,IAAF,CAAOV,OAAO,CAACK,aAAa,EAAd,CAAP,GAA2BJ,OAAO,CAACG,aAAa,EAAd,CAAzC;AAED;;AAED,QAAMO,GAAG,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,CAAR,CAAJ,CAAZ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACR,MAAxB,EAAgCM,CAAC,EAAjC,EAAqC;AACnCH,IAAAA,QAAQ,CAACI,IAAT,CAAcX,WAAW,CAAC,CAAD,CAAX,GAAiB,GAAjB,GAAuBY,GAAG,CAACF,CAAD,CAAxC;AAED;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBK,GAAtB;AACA,SAAOL,QAAP;AACD,CAlBD;;AAoBA,MAAMS,WAAW,GAAG,MAAM;AAExB,QAAMC,WAAW,GAAG,CAAC,MAAM,GAAN,GACnBhB,OAAO,CAACK,aAAa,EAAd,CADY,GAEnBJ,OAAO,CAACG,aAAa,EAAd,CAFW,EAGpB,MAAM,GAAN,GACAJ,OAAO,CAACK,aAAa,EAAd,CADP,GAEAJ,OAAO,CAACG,aAAa,EAAd,CALa,CAApB;AAOAE,EAAAA,QAAQ,CAACI,IAAT,CAAcM,WAAW,CAAC,CAAD,CAAzB,EAA8BA,WAAW,CAAC,CAAD,CAAzC;AACD,CAVD;;AAaA,MAAMC,WAAW,GAAG,MAAM,CAGzB,CAHD;;AAKA,SAASC,GAAT,GAAe;AAEbX,EAAAA,iBAAiB,GAFJ,CAGb;;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AAED,eAAeY,GAAf","sourcesContent":["import React from 'react';\nimport Chess from 'react-chess';\nimport './App.css'\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst chessPieces = ['R', 'Q', 'B', 'N', 'r', 'q', 'b', 'n'];\nconst squares = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\nconst randomChessPieces = () => getRandomInt(chessPieces.length);\nconst randomNumbers = () => getRandomInt(numbers.length);\nconst randomSquares = () => getRandomInt(squares.length);\nconst setBoard = [];\nconst randomCoordenates = () => {\n\n  const s = [];\n  for (let i = 0; i < 10; i++) {\n    s.push(squares[randomSquares()] + numbers[randomNumbers()])\n\n  }\n\n  const coo = [...new Set(s)];\n\n\n  for (let i = 0; i < coo.length; i++) {\n    setBoard.push(chessPieces[1] + '@' + coo[i])\n\n  }\n\n  console.log(setBoard, coo)\n  return setBoard;\n}\n\nconst handleKings = () => {\n\n  const randomKings = ['K' + '@' +\n    squares[randomSquares()] +\n    numbers[randomNumbers()],\n  'k' + '@' +\n  squares[randomSquares()] +\n  numbers[randomNumbers()]\n  ];\n  setBoard.push(randomKings[0], randomKings[1])\n}\n\n\nconst handlePawns = () => {\n\n\n}\n\nfunction App() {\n\n  randomCoordenates()\n  //handleKings()\n\n\n  return (\n    <div className='ChessBoard'>\n      <Chess pieces={setBoard} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}