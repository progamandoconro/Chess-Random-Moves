{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/King.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst King = () => {\n  const _useState = useState(['e']),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState([5]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['K@']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        piece = _useState6[0],\n        setPiece = _useState6[1];\n\n  const _useState7 = useState([+1]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        sign = _useState8[0],\n        setSign = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        position = _useState10[0],\n        handlePosition = _useState10[1];\n\n  const makeKingMove = e => {\n    const i = 0;\n    setNumber(Number(number) + i++);\n\n    if (Number(number) >= 7) {\n      setNumber(Number(number) - 1);\n    }\n\n    handlePosition([piece + letter + number]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeKingMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Move \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default King;","map":{"version":3,"sources":["/home/sony/chessro2/src/King.js"],"names":["React","useState","Chess","King","letter","setLetter","number","setNumber","piece","setPiece","sign","setSign","position","handlePosition","makeKingMove","e","i","Number","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAEaF,QAAQ,CAAC,CAAC,GAAD,CAAD,CAFrB;AAAA;AAAA,QAERG,MAFQ;AAAA,QAEAC,SAFA;;AAAA,qBAGaJ,QAAQ,CAAC,CAAC,CAAD,CAAD,CAHrB;AAAA;AAAA,QAGRK,MAHQ;AAAA,QAGAC,SAHA;;AAAA,qBAIWN,QAAQ,CAAC,CAAC,IAAD,CAAD,CAJnB;AAAA;AAAA,QAIRO,KAJQ;AAAA,QAIDC,QAJC;;AAAA,qBAKSR,QAAQ,CAAC,CAAC,CAAC,CAAF,CAAD,CALjB;AAAA;AAAA,QAKRS,IALQ;AAAA,QAKFC,OALE;;AAAA,qBAOoBV,QAAQ,CAAC,EAAD,CAP5B;AAAA;AAAA,QAORW,QAPQ;AAAA,QAOEC,cAPF;;AASf,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAExB,UAAMC,CAAC,GAAG,CAAV;AACAT,IAAAA,SAAS,CAACU,MAAM,CAACX,MAAD,CAAN,GAAiBU,CAAC,EAAnB,CAAT;;AACA,QAAIC,MAAM,CAACX,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AAAEC,MAAAA,SAAS,CAACU,MAAM,CAACX,MAAD,CAAN,GAAiB,CAAlB,CAAT;AAA+B;;AAE1DO,IAAAA,cAAc,CAAC,CAACL,KAAK,GAAGJ,MAAR,GAAiBE,MAAlB,CAAD,CAAd;AAEH,GARD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGS,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACG,MAAF,CAASC,KAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEP,QAAf;AAAyB,IAAA,UAAU,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CA1BD;;AA4BA,eAAeT,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport Chess from 'react-chess'\n\nconst King = () => {\n\n    const [letter, setLetter] = useState(['e']);\n    const [number, setNumber] = useState([5]);\n    const [piece, setPiece] = useState(['K@']);\n    const [sign, setSign] = useState([+1]);\n\n    const [position, handlePosition] = useState([]);\n\n    const makeKingMove = (e) => {\n\n        const i = 0;\n        setNumber(Number(number) + i++);\n        if (Number(number) >= 7) { setNumber(Number(number) - 1) }\n\n        handlePosition([piece + letter + number])\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeKingMove(e.target.value)} > Move </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default King;"]},"metadata":{},"sourceType":"module"}