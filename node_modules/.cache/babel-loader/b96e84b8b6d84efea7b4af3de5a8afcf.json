{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Pawn.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Pawn = () => {\n  const _useState = useState(['e']),\n        _useState2 = _slicedToArray(_useState, 1),\n        letter = _useState2[0];\n\n  const _useState3 = useState([2]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['P@']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        piece = _useState6[0],\n        setPiece = _useState6[1];\n\n  const _useState7 = useState([piece + letter + number]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const makePawnMove = e => {\n    if (Number(number) === 2) {\n      setNumber(Number(number) + 2);\n    } else setNumber(Number(number) + 1);\n\n    if (Number(number) >= 7) {\n      setPiece('Q@');\n\n      if (Number(number) >= 8) {\n        setPiece('P@');\n        setNumber(2);\n      }\n    }\n\n    handlePosition([piece + letter + number]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makePawnMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Move Up \"), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default Pawn;","map":{"version":3,"sources":["/home/sony/chessro2/src/Pawn.js"],"names":["React","useState","Chess","Pawn","letter","number","setNumber","piece","setPiece","position","handlePosition","makePawnMove","e","Number","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACEF,QAAQ,CAAC,CAAC,GAAD,CAAD,CADV;AAAA;AAAA,QACRG,MADQ;;AAAA,qBAEaH,QAAQ,CAAC,CAAC,CAAD,CAAD,CAFrB;AAAA;AAAA,QAERI,MAFQ;AAAA,QAEAC,SAFA;;AAAA,qBAGWL,QAAQ,CAAC,CAAC,IAAD,CAAD,CAHnB;AAAA;AAAA,QAGRM,KAHQ;AAAA,QAGDC,QAHC;;AAAA,qBAIoBP,QAAQ,CAAC,CAACM,KAAK,GAAGH,MAAR,GAAiBC,MAAlB,CAAD,CAJ5B;AAAA;AAAA,QAIRI,QAJQ;AAAA,QAIEC,cAJF;;AAMf,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,MAAM,CAACR,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtBC,MAAAA,SAAS,CAACO,MAAM,CAACR,MAAD,CAAN,GAAiB,CAAlB,CAAT;AACH,KAFD,MAIKC,SAAS,CAACO,MAAM,CAACR,MAAD,CAAN,GAAiB,CAAlB,CAAT;;AAEL,QAAIQ,MAAM,CAACR,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AACrBG,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,UAAIK,MAAM,CAACR,MAAD,CAAN,IAAkB,CAAtB,EAAyB;AACrBG,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,QAAAA,SAAS,CAAC,CAAD,CAAT;AACH;AACJ;;AACDI,IAAAA,cAAc,CAAC,CAACH,KAAK,GAAGH,MAAR,GAAiBC,MAAlB,CAAD,CAAd;AACH,GAhBD;;AAkBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAGO,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEN,QAAf;AAAyB,IAAA,UAAU,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CA/BD;;AAiCA,eAAeN,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Pawn = () => {\n    const [letter] = useState(['e']);\n    const [number, setNumber] = useState([2]);\n    const [piece, setPiece] = useState(['P@']);\n    const [position, handlePosition] = useState([piece + letter + number]);\n\n    const makePawnMove = (e) => {\n        if (Number(number) === 2) {\n            setNumber(Number(number) + 2);\n        }\n\n        else setNumber(Number(number) + 1);\n\n        if (Number(number) >= 7) {\n            setPiece('Q@');\n\n            if (Number(number) >= 8) {\n                setPiece('P@');\n                setNumber(2);\n            }\n        }\n        handlePosition([piece + letter + number]);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makePawnMove(e.target.value)} > Move Up </button>\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    );\n}\n\nexport default Pawn;"]},"metadata":{},"sourceType":"module"}