{"ast":null,"code":"import _slicedToArray from \"/home/sony/chessro2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sony/chessro2/src/Queen.js\";\nimport React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Queen = () => {\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        letter = _useState2[0],\n        setLetter = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const _useState5 = useState(['Q@']),\n        _useState6 = _slicedToArray(_useState5, 1),\n        piece = _useState6[0];\n\n  const _useState7 = useState(['Q@a1']),\n        _useState8 = _slicedToArray(_useState7, 2),\n        position = _useState8[0],\n        handlePosition = _useState8[1];\n\n  const _useState9 = useState(['e5']),\n        _useState10 = _slicedToArray(_useState9, 2),\n        diagonal = _useState10[0],\n        setDiagonal = _useState10[1];\n\n  const randomNumber = array => {\n    return Math.floor(Math.random() * array.length);\n  };\n\n  const BishopDarkSquares = () => {\n    //black squares\n    //short diagonals\n    const mov1BB = ['a1'];\n    const mov2BB = ['a3', 'b2', 'c1'];\n    const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n    const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n    const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n    const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n    const mov7BB = ['f8', 'g7', 'h6'];\n    const mov8BB = ['h8']; //long diagonals \n\n    const mov1GDBB = ['g1', 'h2'];\n    const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n    const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n    const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n    const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n    const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n    const mov7GDBB = ['a7', 'b8'];\n    const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n    const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n    const randomMoveBishopDarkSquares = array => {\n      for (let index = 0; index < array.length; index++) {\n        const cond = diagonal.some(val => array[index].indexOf(val) !== -1);\n\n        if (cond === true) {\n          const d = array[index];\n          const n = Math.floor(Math.random() * d.length);\n          setDiagonal([d[n]]);\n        }\n      }\n    };\n\n    const makeBishopDarkSquaresMoveDarkSquares = () => {\n      if (Number(Math.random()) > 0.49) {\n        randomMoveBishopDarkSquares(allMoves2);\n      } else {\n        randomMoveBishopDarkSquares(allMoves);\n      }\n\n      handlePosition([piece + diagonal]);\n      console.log(position, diagonal);\n    };\n\n    const BishopLightSquares = () => {\n      //black squares\n      //short diagonals\n      const mov1BB = ['a8'];\n      const mov2BB = ['a6', 'b7', 'c8'];\n      const mov3BB = ['a4', 'b5', 'c6', 'd7', 'e8'];\n      const mov4BB = ['a2', 'b3', 'c4', 'd4', 'e6', 'f7', 'g8'];\n      const mov5BB = ['b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7'];\n      const mov6BB = ['d1', 'e2', 'f3', 'g4', 'h5'];\n      const mov7BB = ['f1', 'g2', 'h3'];\n      const mov8BB = ['h1']; //long diagonals \n\n      const mov1GDBB = ['g8', 'h7'];\n      const mov2GDBB = ['e8', 'f7', 'g6', 'h5'];\n      const mov3GDBB = ['c8', 'd7', 'e6', 'f5', 'g4', 'h3'];\n      const mov4GDBB = ['a8', 'b7', 'c6', 'd5', 'e4', 'f3', 'g2', 'h1'];\n      const mov5GDBB = ['a6', 'b5', 'c4', 'd3', 'e2', 'f1'];\n      const mov6GDBB = ['a4', 'b3', 'c2', 'd1'];\n      const mov7GDBB = ['a2', 'b1'];\n      const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n      const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n      const randomMoveBishopLightSquares = array => {\n        for (let index = 0; index < array.length; index++) {\n          const cond = diagonal.some(val => array[index].indexOf(val) !== -1);\n\n          if (cond === true) {\n            const d = array[index];\n            const n = Math.floor(Math.random() * d.length);\n            setDiagonal([d[n]]);\n          }\n        }\n      };\n\n      const makeBishopLightSquaresMoveLightSquares = () => {\n        if (Number(Math.random()) > 0.49) {\n          randomMoveBishopLightSquares(allMoves2);\n        } else {\n          randomMoveBishopLightSquares(allMoves);\n        }\n\n        handlePosition([piece + diagonal]);\n        console.log(position, diagonal);\n      };\n    };\n  };\n\n  const makeQueenMove = () => {\n    if (Number(Math.random()) > 0.49) {\n      if (Number(Math.random()) > 0.49) {\n        setNumber(randomNumber(letters));\n      } else {\n        setLetter(randomNumber(numbers));\n      }\n    } else {\n      BishopDarkSquares();\n    }\n\n    handlePosition([piece + letters[letter] + numbers[number]]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => makeQueenMove(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \" Move \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(Chess, {\n    pieces: position,\n    allowMoves: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }));\n};\n\nexport default Queen;","map":{"version":3,"sources":["/home/sony/chessro2/src/Queen.js"],"names":["React","useState","Chess","Queen","letters","numbers","letter","setLetter","number","setNumber","piece","position","handlePosition","diagonal","setDiagonal","randomNumber","array","Math","floor","random","length","BishopDarkSquares","mov1BB","mov2BB","mov3BB","mov4BB","mov5BB","mov6BB","mov7BB","mov8BB","mov1GDBB","mov2GDBB","mov3GDBB","mov4GDBB","mov5GDBB","mov6GDBB","mov7GDBB","allMoves","allMoves2","randomMoveBishopDarkSquares","index","cond","some","val","indexOf","d","n","makeBishopDarkSquaresMoveDarkSquares","Number","console","log","BishopLightSquares","randomMoveBishopLightSquares","makeBishopLightSquaresMoveLightSquares","makeQueenMove","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\n\n\n\nconst Queen = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    const [letter, setLetter] = useState(1);\n    const [number, setNumber] = useState(1);\n    const [piece] = useState(['Q@']);\n    const [position, handlePosition] = useState(['Q@a1']);\n\n\n\n\n\n    const [diagonal, setDiagonal] = useState(['e5']);\n\n\n    const randomNumber = (array) => { return Math.floor(Math.random() * array.length); }\n\n\n    const BishopDarkSquares = () => {\n\n        //black squares\n\n        //short diagonals\n        const mov1BB = ['a1'];\n        const mov2BB = ['a3', 'b2', 'c1'];\n        const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n        const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n        const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n        const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n        const mov7BB = ['f8', 'g7', 'h6'];\n        const mov8BB = ['h8'];\n\n        //long diagonals \n        const mov1GDBB = ['g1', 'h2'];\n        const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n        const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n        const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n        const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n        const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n        const mov7GDBB = ['a7', 'b8'];\n\n        const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n        const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n        const randomMoveBishopDarkSquares = (array) => {\n\n            for (let index = 0; index < array.length; index++) {\n\n                const cond = diagonal.some((val) => array[index].indexOf(val) !== -1);\n\n                if (cond === true) {\n                    const d = array[index];\n                    const n = Math.floor(Math.random() * d.length);\n                    setDiagonal([d[n]]);\n                }\n            }\n        }\n\n        const makeBishopDarkSquaresMoveDarkSquares = () => {\n\n            if (Number(Math.random()) > 0.49) {\n                randomMoveBishopDarkSquares(allMoves2);\n            }\n\n            else {\n                randomMoveBishopDarkSquares(allMoves);\n            }\n\n            handlePosition([piece + diagonal]);\n            console.log(position, diagonal);\n        }\n\n        const BishopLightSquares = () => {\n\n            //black squares\n\n            //short diagonals\n            const mov1BB = ['a8'];\n            const mov2BB = ['a6', 'b7', 'c8'];\n            const mov3BB = ['a4', 'b5', 'c6', 'd7', 'e8'];\n            const mov4BB = ['a2', 'b3', 'c4', 'd4', 'e6', 'f7', 'g8'];\n            const mov5BB = ['b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7'];\n            const mov6BB = ['d1', 'e2', 'f3', 'g4', 'h5'];\n            const mov7BB = ['f1', 'g2', 'h3'];\n            const mov8BB = ['h1'];\n\n            //long diagonals \n            const mov1GDBB = ['g8', 'h7'];\n            const mov2GDBB = ['e8', 'f7', 'g6', 'h5'];\n            const mov3GDBB = ['c8', 'd7', 'e6', 'f5', 'g4', 'h3'];\n            const mov4GDBB = ['a8', 'b7', 'c6', 'd5', 'e4', 'f3', 'g2', 'h1'];\n            const mov5GDBB = ['a6', 'b5', 'c4', 'd3', 'e2', 'f1'];\n            const mov6GDBB = ['a4', 'b3', 'c2', 'd1'];\n            const mov7GDBB = ['a2', 'b1'];\n\n            const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n            const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n            const randomMoveBishopLightSquares = (array) => {\n\n                for (let index = 0; index < array.length; index++) {\n\n                    const cond = diagonal.some((val) => array[index].indexOf(val) !== -1);\n\n                    if (cond === true) {\n                        const d = array[index];\n                        const n = Math.floor(Math.random() * d.length);\n                        setDiagonal([d[n]]);\n                    }\n                }\n            }\n\n            const makeBishopLightSquaresMoveLightSquares = () => {\n\n                if (Number(Math.random()) > 0.49) {\n                    randomMoveBishopLightSquares(allMoves2);\n                }\n\n                else {\n                    randomMoveBishopLightSquares(allMoves);\n                }\n\n                handlePosition([piece + diagonal]);\n                console.log(position, diagonal);\n            }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        }\n\n\n\n    }\n\n\n    const makeQueenMove = () => {\n\n\n\n        if (Number(Math.random()) > 0.49) {\n\n\n\n            if (Number(Math.random()) > 0.49) {\n                setNumber(randomNumber(letters));\n\n            }\n            else {\n                setLetter(randomNumber(numbers));\n            }\n\n        } else {\n\n            BishopDarkSquares();\n        }\n\n        handlePosition([piece + letters[letter] + numbers[number]]);\n\n    }\n\n\n    return (\n        <div >\n            <button onClick={(e) => makeQueenMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Queen;"]},"metadata":{},"sourceType":"module"}