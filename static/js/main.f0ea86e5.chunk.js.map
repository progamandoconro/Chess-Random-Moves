{"version":3,"sources":["const/Board.js","const/RandomPositions.js","Random.js","Pawn.js","King.js","Rook.js","Knight.js","BishopDS.js","BishopLS.js","const/Diagonals.js","Queen.js","App.js","index.js"],"names":["myBoard","board","letters","numbers","i","length","index","push","myRandomPositions","setBoard","fixBoard","randomChessPieces","a","j","Math","floor","random","shuffle","randomNumber","array","WhiteKingNumber","Number","WhiteKingLetter","BlackKingNumber","BlackKingLetter","splice","b","val","removePawns","s","substr","checkNumber","checkLetter","console","log","kingPosition","Random","useState","position","handlePosition","allPositions","addPosition","onClick","e","pieces","allowMoves","Pawn","letter","number","setNumber","piece","setPiece","target","value","King","setLetter","setIndex","Rook","n","randomMove","Knight","mov1","mov2","mov3","mov4","mov5","mov6","mov7","mov8","num","ind","arrayOfMoves","makeKnightMove","BishopDarkSquares","diagonal","setDiagonal","allMoves","allMoves2","randomMoveBishopDarkSquares","some","indexOf","d","BishopLightSquares","randomMoveBishopLightSquares","Diagonals","Queen","pos","split","toString","makeQueenMove","App","className","BishopDS","BishopLS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0ea86e5.chunk.js","sourcesContent":["const myBoard = () => {\n  const board = [];\n\n  const letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n  const numbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n\n  for (let i = 0; i < letters.length; i++) {\n    for (let index = 0; index < numbers.length; index++) {\n      board.push(letters[i] + numbers[index]);\n    }\n  }\n\n  return board;\n};\n\nexport default myBoard;\n","import myBoard from \"./Board\";\n\nconst shuffle = a => {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nconst myRandomPositions = () => {\n  const setBoard = [];\n  const fixBoard = [];\n  const ChessPieces = [\n    \"R\",\n    \"r\",\n    \"q\",\n    \"Q\",\n    \"B\",\n    \"b\",\n    \"n\",\n    \"N\",\n    \"R\",\n    \"r\",\n    \"B\",\n    \"N\",\n    \"b\",\n    \"n\",\n    \"p\",\n    \"p\",\n    \"p\",\n    \"p\",\n    \"p\",\n    \"p\",\n    \"p\",\n    \"p\",\n    \"P\",\n    \"P\",\n    \"P\",\n    \"P\",\n    \"P\",\n    \"P\",\n    \"P\",\n    \"P\"\n  ];\n\n  const randomChessPieces = shuffle(ChessPieces);\n\n  //Set Board and Coordenates\n\n  const randomSquare = () => Math.floor(Math.random() * board.length);\n  const randomPiece = () =>\n    Math.floor(Math.random() * randomChessPieces.length);\n  const board = myBoard();\n  const randomNumber = array => {\n    return Math.floor(Math.random() * array.length);\n  };\n\n  const letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n  const numbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n\n  const WhiteKingNumber = Number(randomNumber(numbers));\n  const WhiteKingLetter = Number(randomNumber(letters));\n\n  const BlackKingNumber = Number(randomNumber(numbers));\n  const BlackKingLetter = Number(randomNumber(letters));\n\n  const kingPosition = () => {\n    for (let index = 0; index < setBoard.length; index++) {\n      let s = setBoard[index];\n      fixBoard.push(s.substr(2));\n    }\n\n    // Avoid kings to be one square near to each other\n\n    const checkNumber = () => {\n      if (\n        WhiteKingNumber === BlackKingNumber ||\n        WhiteKingNumber === BlackKingNumber + 1 ||\n        WhiteKingNumber === BlackKingNumber - 1\n      ) {\n        return \"TRUE\";\n      }\n    };\n\n    const checkLetter = () => {\n      if (\n        WhiteKingLetter === BlackKingLetter ||\n        WhiteKingLetter === BlackKingLetter + 1 ||\n        WhiteKingLetter === BlackKingLetter - 1\n      ) {\n        return \"TRUE\";\n      }\n    };\n\n    if (checkNumber() === \"TRUE\" && checkLetter() === \"TRUE\") {\n      console.log(\"kings were too close, so sent to opposite corners\");\n      setBoard.push(\"K@\" + \"a1\", \"k@\" + \"h8\");\n    } else {\n      setBoard.push(\n        \"K@\" + letters[WhiteKingLetter] + numbers[WhiteKingNumber],\n        \"k@\" + letters[BlackKingLetter] + numbers[BlackKingNumber]\n      );\n    }\n  };\n\n  for (let i = 0; i < randomPiece(); i++) {\n    for (let index = 0; index < board.length; index++) {\n      if (\n        board[index] ===\n        letters[WhiteKingLetter] + numbers[WhiteKingNumber]\n      ) {\n        board.splice(index, 1);\n        board.splice(0, 1);\n      }\n      if (\n        board[index] ===\n        letters[BlackKingLetter] + numbers[BlackKingNumber]\n      ) {\n        board.splice(index, 1);\n        board.splice(board.length - 1, 1);\n      }\n    }\n\n    const b = board[randomSquare()];\n    for (let index = 0; index < board.length; index++) {\n      if (board[index] === b) {\n        board.splice(index, 1);\n      }\n    }\n\n    setBoard.push(randomChessPieces[i] + \"@\" + b);\n\n    const removePawns = val => {\n      for (let index = 0; index < setBoard.length; index++) {\n        for (let j = 0; j < val.length; j++) {\n          if (setBoard[index] === val[j]) {\n            setBoard.splice(index, 1);\n          }\n        }\n      }\n    };\n    removePawns([\n      \"P@a1\",\n      \"P@b1\",\n      \"P@c1\",\n      \"P@d1\",\n      \"P@e1\",\n      \"P@f1\",\n      \"P@g1\",\n      \"P@h1\",\n      \"p@a1\",\n      \"p@b1\",\n      \"p@c1\",\n      \"p@d1\",\n      \"p@e1\",\n      \"p@f1\",\n      \"p@g1\",\n      \"p@h1\",\n      \"P@a8\",\n      \"P@b8\",\n      \"P@c8\",\n      \"P@d8\",\n      \"P@e8\",\n      \"P@f8\",\n      \"P@g8\",\n      \"P@h8\",\n      \"p@a8\",\n      \"p@b8\",\n      \"p@c8\",\n      \"p@d8\",\n      \"p@e8\",\n      \"p@f8\",\n      \"p@g8\",\n      \"p@h8\"\n    ]);\n  }\n\n  kingPosition();\n  console.log(setBoard);\n  return setBoard;\n};\n\nexport default myRandomPositions;\n","import React, { useState } from \"react\";\nimport Chess from \"react-chess\";\nimport myRandomPositions from \"./const/RandomPositions\";\n\nconst Random = () => {\n  const [position, handlePosition] = useState([]);\n  const [allPositions, addPosition] = useState([]);\n\n  const makeRandomPosition = () => {\n    handlePosition(myRandomPositions());\n    allPositions.push(\" / \" + position);\n    addPosition(allPositions);\n  };\n\n  return (\n    <div>\n      <div>\n        <br />\n        <button onClick={e => makeRandomPosition(e)}>Create</button>\n        <hr />\n\n        <Chess pieces={position} allowMoves={false} />\n      </div>\n      <div>\n        <li>{allPositions}</li>\n      </div>\n    </div>\n  );\n};\n\nexport default Random;\n","import React, { useState } from \"react\";\nimport Chess from \"react-chess\";\n\nconst Pawn = () => {\n  const [letter] = useState([\"e\"]);\n  const [number, setNumber] = useState([2]);\n  const [piece, setPiece] = useState([\"P@\"]);\n  const [position, handlePosition] = useState([piece + letter + number]);\n\n  const makePawnMove = e => {\n    if (Number(number) === 2) {\n      setNumber(Number(number) + 2);\n    } else setNumber(Number(number) + 1);\n\n    if (Number(number) >= 7) {\n      setPiece(\"Q@\");\n\n      if (Number(number) >= 8) {\n        setPiece(\"P@\");\n        setNumber(2);\n      }\n    }\n    handlePosition([piece + letter + number]);\n  };\n\n  return (\n    <div>\n      <button onClick={e => makePawnMove(e.target.value)}> Move </button>\n      <hr />\n      <Chess pieces={position} allowMoves={false} />\n    </div>\n  );\n};\n\nexport default Pawn;\n","import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst King = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const [letter, setLetter] = useState(['b']);\n    const [number, setNumber] = useState(Number(1));\n    const [piece] = useState(['K@']);\n    const [index, setIndex] = useState(Number(1));\n    const [position, handlePosition] = useState(['K@a1']);\n\n    const makeKingMove = () => {\n\n        const randomMove = () => {\n            if (Number(Math.random()) > 0.49) {\n                setNumber(Number(number) + 1)\n            }\n            else {\n                if (Number(Math.random()) > 0.49) {\n                    setIndex(index + 1)\n                }\n                else {\n                    setIndex(index - 1)\n                }\n                setNumber(Number(number) - 1)\n            }\n            if (Number(number) >= 8) {\n                setNumber(Number(number) - 1)\n            }\n            if (Number(number <= 1)) {\n                setNumber(Number(number) + 1)\n            }\n            if (Number(index) >= 7) {\n                setIndex(Number(index) - 1)\n            }\n            if (Number(index) <= 0) {\n                setIndex(Number(index) + 1)\n            }\n\n            setLetter(letters[Number(index)])\n            handlePosition([piece + letter + number]);\n            console.log(position);\n\n        }\n        randomMove();\n\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeKingMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default King;","import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Rook = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    const [letter, setLetter] = useState(['b']);\n    const [number, setNumber] = useState(1);\n    const [piece] = useState(['R@']);\n    const [position, handlePosition] = useState(['R@a1']);\n\n    const makeRookMove = () => {\n        const randomMove = () => {\n            const n = Math.floor(Math.random() * numbers.length);\n\n            if (Number(Math.random()) > 0.49) {\n                setNumber(numbers[n]);\n\n            }\n            else {\n                setLetter(letters[n]);\n            }\n\n        }\n        randomMove();\n        handlePosition([piece + letter + number]);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeRookMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Rook;","import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst Knight = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    const [index, setIndex] = useState(Number(4));\n    const [number, setNumber] = useState(Number(4));\n    const [piece] = useState(['N@']);\n    const [position, handlePosition] = useState([piece + letters[index] + numbers[number]]);\n\n    const mov1 = () => {\n        setNumber(number + 2);\n        setIndex(index + 1);\n\n    }\n    const mov2 = () => {\n        setNumber(number + 1);\n        setIndex(index + 2);\n\n\n    }\n    const mov3 = () => {\n        setNumber(number + 2);\n        setIndex(index - 1);\n\n    }\n    const mov4 = () => {\n        setNumber(number + 1);\n        setIndex(index - 2);\n\n\n    }\n    const mov5 = () => {\n        setNumber(number - 2);\n        setIndex(index + 1);\n\n    }\n    const mov6 = () => {\n        setNumber(number - 2);\n        setIndex(index - 1);\n\n\n    }\n    const mov7 = () => {\n        setNumber(number - 1);\n        setIndex(index + 2);\n\n\n    }\n    const mov8 = () => {\n        setNumber(number - 1);\n        setIndex(index - 2);\n\n\n\n    }\n\n    const num = [];\n    const ind = [];\n\n\n    const makeKnightMove = () => {\n\n        const arrayOfMoves = [mov1, mov2, mov3, mov4, mov5, mov6, mov7, mov8];\n        const n = Math.floor(Math.random() * arrayOfMoves.length);\n\n\n        if (number < 6 && number > 2 && index < 6 && index > 2) {\n            arrayOfMoves[Number(n)]();\n            num.push(number);\n            ind.push(index);\n            console.log(num, ind)\n\n        }\n\n        else {\n\n            setIndex(Number(4));\n            setNumber(Number(4));\n            console.log('handleBoard2', position, letters[index], number, index);\n\n\n\n        }\n\n        handlePosition([piece + letters[index] + numbers[number]]);\n        console.log(num, ind);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeKnightMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default Knight;\n\n","import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst BishopDarkSquares = () => {\n    const [piece] = useState(['B@']);\n    const [position, handlePosition] = useState(['B@e5']);\n    const [diagonal, setDiagonal] = useState(['e5']);\n\n    //black squares\n\n    //short diagonals\n    const mov1BB = ['a1'];\n    const mov2BB = ['a3', 'b2', 'c1'];\n    const mov3BB = ['a5', 'b4', 'c3', 'd2', 'e1'];\n    const mov4BB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\n    const mov5BB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\n    const mov6BB = ['d8', 'e7', 'f6', 'g5', 'h4'];\n    const mov7BB = ['f8', 'g7', 'h6'];\n    const mov8BB = ['h8'];\n\n    //long diagonals \n    const mov1GDBB = ['g1', 'h2'];\n    const mov2GDBB = ['e1', 'f2', 'g3', 'h4'];\n    const mov3GDBB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\n    const mov4GDBB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\n    const mov5GDBB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\n    const mov6GDBB = ['a5', 'b6', 'c7', 'd8'];\n    const mov7GDBB = ['a7', 'b8'];\n\n    const allMoves = [mov1BB, mov2BB, mov3BB, mov4BB, mov5BB, mov6BB, mov7BB, mov8BB];\n    const allMoves2 = [mov1GDBB, mov2GDBB, mov3GDBB, mov4GDBB, mov5GDBB, mov6GDBB, mov7GDBB];\n\n    const randomMoveBishopDarkSquares = (array) => {\n\n        for (let index = 0; index < array.length; index++) {\n\n            const cond = diagonal.some((val) => array[index].indexOf(val) !== -1);\n\n            if (cond === true) {\n                const d = array[index];\n                const n = Math.floor(Math.random() * d.length);\n                setDiagonal([d[n]]);\n            }\n        }\n    }\n\n    const makeBishopDarkSquaresMoveDarkSquares = () => {\n\n        if (Number(Math.random()) > 0.49) {\n            randomMoveBishopDarkSquares(allMoves2);\n        }\n\n        else {\n            randomMoveBishopDarkSquares(allMoves);\n        }\n\n        handlePosition([piece + diagonal]);\n        console.log(position, diagonal);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeBishopDarkSquaresMoveDarkSquares(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default BishopDarkSquares;","import React, { useState } from 'react';\nimport Chess from 'react-chess';\n\nconst BishopLightSquares = () => {\n    const [piece] = useState(['B@']);\n    const [position, handlePosition] = useState(['B@e4']);\n    const [diagonal, setDiagonal] = useState(['e4']);\n\n    //light squares\n\n    //short diagonals\n    const mov1LB = ['a8'];\n    const mov2LB = ['a6', 'b7', 'c8'];\n    const mov3LB = ['a4', 'b5', 'c6', 'd7', 'e8'];\n    const mov4LB = ['a2', 'b3', 'c4', 'd4', 'e6', 'f7', 'g8'];\n    const mov5LB = ['b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7'];\n    const mov6LB = ['d1', 'e2', 'f3', 'g4', 'h5'];\n    const mov7LB = ['f1', 'g2', 'h3'];\n    const mov8LB = ['h1'];\n\n    //long diagonals \n    const mov1GDLB = ['g8', 'h7'];\n    const mov2GDLB = ['e8', 'f7', 'g6', 'h5'];\n    const mov3GDLB = ['c8', 'd7', 'e6', 'f5', 'g4', 'h3'];\n    const mov4GDLB = ['a8', 'b7', 'c6', 'd5', 'e4', 'f3', 'g2', 'h1'];\n    const mov5GDLB = ['a6', 'b5', 'c4', 'd3', 'e2', 'f1'];\n    const mov6GDLB = ['a4', 'b3', 'c2', 'd1'];\n    const mov7GDLB = ['a2', 'b1'];\n\n    const allMoves = [mov1LB, mov2LB, mov3LB, mov4LB, mov5LB, mov6LB, mov7LB, mov8LB];\n    const allMoves2 = [mov1GDLB, mov2GDLB, mov3GDLB, mov4GDLB, mov5GDLB, mov6GDLB, mov7GDLB];\n\n    const randomMoveBishopLightSquares = (array) => {\n\n        for (let index = 0; index < array.length; index++) {\n\n            const cond = diagonal.some((val) => array[index].indexOf(val) !== -1);\n\n            if (cond === true) {\n                const d = array[index];\n                const n = Math.floor(Math.random() * d.length);\n                setDiagonal([d[n]]);\n            }\n        }\n    }\n\n    const makeBishopLightSquaresMoveLightSquares = () => {\n\n        if (Number(Math.random()) > 0.49) {\n            randomMoveBishopLightSquares(allMoves2);\n        }\n\n        else {\n            randomMoveBishopLightSquares(allMoves);\n        }\n\n        handlePosition([piece + diagonal]);\n        console.log(position, diagonal);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeBishopLightSquaresMoveLightSquares(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    )\n}\n\nexport default BishopLightSquares;","\n\n//light squares\n\n//short diagonals\nconst mov1LB = ['a8'];\nconst mov2LB = ['a6', 'b7', 'c8'];\nconst mov3LB = ['a4', 'b5', 'c6', 'd7', 'e8'];\nconst mov4LB = ['a2', 'b3', 'c4', 'd4', 'e6', 'f7', 'g8'];\nconst mov5LB = ['b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7'];\nconst mov6LB = ['d1', 'e2', 'f3', 'g4', 'h5'];\nconst mov7LB = ['f1', 'g2', 'h3'];\nconst mov8LB = ['h1'];\n\n//long diagonals \nconst mov1GDLB = ['g8', 'h7'];\nconst mov2GDLB = ['e8', 'f7', 'g6', 'h5'];\nconst mov3GDLB = ['c8', 'd7', 'e6', 'f5', 'g4', 'h3'];\nconst mov4GDLB = ['a8', 'b7', 'c6', 'd5', 'e4', 'f3', 'g2', 'h1'];\nconst mov5GDLB = ['a6', 'b5', 'c4', 'd3', 'e2', 'f1'];\nconst mov6GDLB = ['a4', 'b3', 'c2', 'd1'];\nconst mov7GDLB = ['a2', 'b1'];\n\n//black squares\n\n//short diagonals\nconst mov1DB = ['a1'];\nconst mov2DB = ['a3', 'b2', 'c1'];\nconst mov3DB = ['a5', 'b4', 'c3', 'd2', 'e1'];\nconst mov4DB = ['a7', 'b6', 'c5', 'd4', 'e3', 'f2', 'g1'];\nconst mov5DB = ['b8', 'c7', 'd6', 'e5', 'f4', 'g3', 'Bh2'];\nconst mov6DB = ['d8', 'e7', 'f6', 'g5', 'h4'];\nconst mov7DB = ['f8', 'g7', 'h6'];\nconst mov8DB = ['h8'];\n\n//long diagonals \nconst mov1GDDB = ['g1', 'h2'];\nconst mov2GDDB = ['e1', 'f2', 'g3', 'h4'];\nconst mov3GDDB = ['c1', 'd2', 'e3', 'f4', 'g5', 'h6'];\nconst mov4GDDB = ['a1', 'b2', 'c3', 'd4', 'e5', 'f6', 'g7', 'h8'];\nconst mov5GDDB = ['a3', 'b4', 'c5', 'd6', 'e7', 'f8'];\nconst mov6GDDB = ['a5', 'b6', 'c7', 'd8'];\nconst mov7GDDB = ['a7', 'b8'];\n\nconst Diagonals = [mov1DB, mov2DB, mov3DB, mov4DB, mov5DB, mov6DB, mov7DB, mov8DB, mov1GDDB,\n    mov2GDDB, mov3GDDB, mov4GDDB, mov5GDDB, mov6GDDB, mov7GDDB,\n    mov1LB, mov2LB, mov3LB, mov4LB, mov5LB, mov6LB, mov7LB, mov8LB,\n    mov1GDLB, mov2GDLB, mov3GDLB, mov4GDLB, mov5GDLB, mov6GDLB, mov7GDLB\n]\n\nexport default Diagonals; ","import React, { useState } from 'react';\nimport Chess from 'react-chess';\nimport Diagonals from './const/Diagonals'\n\nconst Queen = () => {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    const [letter, setLetter] = useState('a');\n    const [number, setNumber] = useState('1');\n    const [piece] = useState(['Q@']);\n    const [position, handlePosition] = useState(['Q@a1']);\n    const randomNumber = (array) => { return Math.floor(Math.random() * array.length); }\n\n    const makeQueenMove = () => {\n        const diagonal = [letter + number];\n\n        if (Number(Math.random()) > 0.499) {\n\n            if (Number(Math.random()) > 0.499) {\n                setNumber(numbers[randomNumber(numbers)]);\n            }\n            else {\n                setLetter(letters[randomNumber(letters)]);\n\n            }\n\n        } else {\n            for (let index = 0; index < Diagonals.length; index++) {\n\n                const cond = diagonal.some((val) => Diagonals[index].indexOf(val) !== -1);\n                if (cond === true) {\n                    const d = Diagonals[index];\n                    const n = Math.floor(Math.random() * d.length);\n                    const square = d[n];\n                    const pos = square.split().toString();\n                    setLetter(pos[0]);\n                    setNumber(pos[1]);\n                    console.log(position, letter, number, 'caso2', pos);\n                    break;\n                }\n            }\n        }\n        handlePosition([piece + letter + number]);\n    }\n\n    return (\n        <div >\n            <button onClick={(e) => makeQueenMove(e.target.value)} > Move </button>\n            <hr />\n            <Chess pieces={position} allowMoves={false} />\n\n        </div>\n    );\n}\n\nexport default Queen;","import React from \"react\";\nimport \"./App.css\";\n//import ReadPGN from './ReadPGN';\nimport Random from \"./Random\";\nimport Pawn from \"./Pawn\";\nimport King from \"./King\";\nimport Rook from \"./Rook\";\nimport Knight from \"./Knight\";\nimport BishopDS from \"./BishopDS\";\nimport BishopLS from \"./BishopLS\";\nimport Queen from \"./Queen\";\n\nfunction App() {\n  return (\n    <div className=\"ChessBoard\">\n      <h5> Chess Random Moves Generator, by Ro </h5>\n\n      <h5>Random Positions</h5>\n      <Random />\n      <br />\n\n      <h5>King</h5>\n      <King />\n      <br />\n\n      <h5>Rook</h5>\n      <Rook />\n      <br />\n\n      <h5>Dark square Bishop</h5>\n      <BishopDS />\n      <br />\n\n      <h5>Light Square Bishop</h5>\n      <BishopLS />\n      <br />\n\n      <h5>Knight</h5>\n      <Knight />\n      <br />\n\n      <h5>Pawn</h5>\n      <Pawn />\n      <br />\n\n      <h5>Queen Moves</h5>\n      <Queen />\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}